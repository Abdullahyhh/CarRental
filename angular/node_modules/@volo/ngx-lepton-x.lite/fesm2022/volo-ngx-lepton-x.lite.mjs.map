{"version":3,"file":"volo-ngx-lepton-x.lite.mjs","sources":["../../../../libs/lepton-x-lite/src/lib/tokens/style.token.ts","../../../../libs/lepton-x-lite/src/lib/providers/style.provider.ts","../../../../libs/lepton-x-lite/src/lib/lepton-x-lite.module.ts","../../../../libs/lepton-x-lite/src/lib/components/user-profile/user-profile.component.ts","../../../../libs/lepton-x-lite/src/lib/components/user-profile/user-profile.component.html","../../../../libs/lepton-x-lite/src/lib/components/user-profile/user-profile.module.ts","../../../../libs/lepton-x-lite/src/lib/components/language-selection/language-selection.component.ts","../../../../libs/lepton-x-lite/src/lib/components/language-selection/language-selection.component.html","../../../../libs/lepton-x-lite/src/lib/components/language-selection/language-selection.module.ts","../../../../libs/lepton-x-lite/src/index.ts","../../../../libs/lepton-x-lite/src/volo-ngx-lepton-x.lite.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\r\nimport { LpxStyles } from '@volo/ngx-lepton-x.core';\r\n\r\nexport const LPX_LITE_STYLE_TOKEN = new InjectionToken<LpxStyles>(\r\n  'LPX_LITE_STYLE_TOKEN'\r\n);\r\n","import { inject, provideAppInitializer } from '@angular/core';\r\nimport {\r\n  createStyleFactory,\r\n  LPX_INITIAL_STYLES,\r\n  LPX_LAYOUT_STYLE_FINAL,\r\n  LPX_STYLE_FINAL,\r\n  LpxStyleFactory,\r\n  LpxStyles,\r\n} from '@volo/ngx-lepton-x.core';\r\nimport { LPX_LITE_STYLE_TOKEN } from '../tokens';\r\n\r\nexport const getLpxLiteStyleProviders = (styleFactory?: LpxStyleFactory) => [\r\n  provideAppInitializer(() => {\r\n    inject(LPX_LITE_STYLE_TOKEN);\r\n  }),\r\n  {\r\n    provide: LPX_LITE_STYLE_TOKEN,\r\n    deps: [LPX_INITIAL_STYLES, LPX_LAYOUT_STYLE_FINAL],\r\n    useFactory: mergeStyles,\r\n  },\r\n  {\r\n    provide: LPX_STYLE_FINAL,\r\n    deps: [LPX_LITE_STYLE_TOKEN],\r\n    useFactory: createStyleFactory(styleFactory),\r\n  },\r\n];\r\n\r\nexport function mergeStyles(styleList: LpxStyles, layoutStyles: LpxStyles) {\r\n  styleList.push({\r\n    bundleName: 'bootstrap-dim',\r\n  });\r\n  styleList.push({\r\n    bundleName: 'ng-bundle',\r\n  });\r\n  styleList.push({\r\n    bundleName: 'font-bundle',\r\n  });\r\n  return [...styleList, ...layoutStyles];\r\n}\r\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\r\nimport {\r\n  HasStyleFactory,\r\n  LpxCoreModule,\r\n  LpxCoreOptions,\r\n} from '@volo/ngx-lepton-x.core';\r\nimport { getLpxLiteStyleProviders } from './providers';\r\n\r\nexport interface LpxOptions extends LpxCoreOptions, HasStyleFactory {}\r\n\r\n@NgModule({\r\n  imports: [LpxCoreModule],\r\n})\r\nexport class LpxModule {\r\n  static forRoot(options?: LpxOptions): ModuleWithProviders<LpxModule> {\r\n    return {\r\n      ngModule: LpxModule,\r\n      providers: [\r\n        getLpxLiteStyleProviders(options?.styleFactory),\r\n        LpxCoreModule.forRoot(options).providers as Provider,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import { Component, Injector, ViewEncapsulation, inject } from '@angular/core';\r\nimport { LpxNavbarItem, UserProfileService } from '@volo/ngx-lepton-x.core';\r\n\r\n@Component({\r\n  standalone: false,\r\n  selector: 'lpx-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class UserProfileComponent {\r\n  private service = inject(UserProfileService);\r\n  public injector = inject(Injector);\r\n  user$ = this.service.user$;\r\n\r\n  onActionClick(item: LpxNavbarItem) {\r\n    item.action?.();\r\n  }\r\n}\r\n","@if (user$ | async; as userProfile) {\r\n  @if (userProfile.userName) {\r\n    <div ngbDropdown>\r\n      <div class=\"lpx-user-profile\" ngbDropdownToggle role=\"button\">\r\n        <lpx-avatar [avatar]=\"userProfile.avatar\"></lpx-avatar>\r\n        <span class=\"user-full-name\">{{ userProfile.fullName }}</span>\r\n      </div>\r\n      @if (userProfile.userActionGroups) {\r\n        <div ngbDropdownMenu>\r\n          @for (\r\n            actionGroup of userProfile.userActionGroups;\r\n            track $index;\r\n            let last = $last\r\n          ) {\r\n            @for (action of actionGroup; track $index) {\r\n              @if (action.component) {\r\n                <ng-container\r\n                  *ngComponentOutlet=\"action.component; injector: injector\"\r\n                ></ng-container>\r\n              }\r\n              @if (!action.component) {\r\n                <a\r\n                  ngbDropdownItem\r\n                  (click)=\"onActionClick(action)\"\r\n                  [routerLink]=\"action.link\"\r\n                  >{{ action.text || '' | lpxTranslate | async }}\r\n                </a>\r\n              }\r\n            }\r\n            @if (!last) {\r\n              <div class=\"dropdown-divider\"></div>\r\n            }\r\n          }\r\n        </div>\r\n      }\r\n    </div>\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { LpxAvatarModule, LpxTranslateModule } from '@volo/ngx-lepton-x.core';\r\nimport { UserProfileComponent } from './user-profile.component';\r\n\r\n@NgModule({\r\n  declarations: [UserProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    LpxAvatarModule,\r\n    NgbDropdownModule,\r\n    RouterModule,\r\n    LpxTranslateModule,\r\n  ],\r\n  exports: [UserProfileComponent],\r\n})\r\nexport class UserProfileModule {}\r\n","import { Component, ViewEncapsulation, inject } from '@angular/core';\r\nimport {\r\n  LanguageService,\r\n  LpxIconModule,\r\n  LpxLanguage,\r\n} from '@volo/ngx-lepton-x.core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'lpx-language-selection',\r\n  imports: [CommonModule, NgbDropdownModule, LpxIconModule],\r\n  templateUrl: './language-selection.component.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class LanguageSelectionComponent {\r\n  private service = inject(LanguageService);\r\n  langs$ = this.service.languages$;\r\n  selectedLanguage$ = this.service.selectedLanguage$;\r\n\r\n  onLanguageSelection(lang: LpxLanguage) {\r\n    this.service.setSelectedLanguage(lang);\r\n  }\r\n}\r\n","<div ngbDropdown class=\"lpx-language-selection\">\r\n  @if (selectedLanguage$ | async; as selectedLanguage) {\r\n    <div ngbDropdownToggle role=\"button\">\r\n      <lpx-icon iconClass=\"bi bi-globe\"></lpx-icon>\r\n      @if (selectedLanguage; as val) {\r\n        <span [ngClass]=\"{ 'text-uppercase': !!val.twoLetterISOLanguageName }\">\r\n          {{ val.twoLetterISOLanguageName || val.displayName }}\r\n        </span>\r\n      }\r\n    </div>\r\n  }\r\n  @if (langs$ | async; as langs) {\r\n    <div ngbDropdownMenu>\r\n      @for (lang of langs; track $index) {\r\n        <button ngbDropdownItem (click)=\"onLanguageSelection(lang)\">\r\n          {{ lang.displayName }}\r\n        </button>\r\n      }\r\n    </div>\r\n  }\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { LanguageSelectionComponent } from './language-selection.component';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [LanguageSelectionComponent],\r\n  exports: [LanguageSelectionComponent],\r\n})\r\nexport class LanguageSelectionModule {}\r\n","/*\r\n * Public API Surface of lepton-x-lite\r\n */\r\n\r\nexport * from './lib/index';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i3"],"mappings":"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"}