import { EventEmitter, Injector } from '@angular/core';
import { GroupedNavbarItems, LpxNavbarItem } from '../models';
import { RoutesService } from '../../../services/route/routes.service';
import * as i0 from "@angular/core";
export type NavbarItemsType = LpxNavbarItem[] | null | undefined;
export type NavbarGroupItemsType = GroupedNavbarItems[] | null | undefined;
export declare class NavbarRoutesComponent {
    protected readonly injector: Injector;
    protected readonly routesService: RoutesService;
    groupedItems: NavbarGroupItemsType;
    navbarItems: NavbarItemsType;
    routerItem: import("@angular/core").InputSignal<boolean | undefined>;
    routeClick: EventEmitter<LpxNavbarItem>;
    private get itemsFromGroup();
    constructor();
    private isExpandedOrSelected;
    onSubnavbarExpand(menuItem: LpxNavbarItem, menuItems: NavbarItemsType): void;
    onRouteClick(menuItem: LpxNavbarItem, menuItems: NavbarItemsType): void;
    checkChildrenIncludesItem(item: LpxNavbarItem, menuItem: LpxNavbarItem): boolean;
    flatChildren(menuItems: NavbarItemsType): LpxNavbarItem[];
    fixNavbarItemsByRouter(): void;
    fixNavbarItems(currentUrl: string, items: LpxNavbarItem[]): void;
    hasUrlInChildren(item: LpxNavbarItem, url: string): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<NavbarRoutesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<NavbarRoutesComponent, "lpx-navbar-routes", never, { "groupedItems": { "alias": "groupedItems"; "required": false; }; "navbarItems": { "alias": "navbarItems"; "required": false; }; "routerItem": { "alias": "routerItem"; "required": false; "isSignal": true; }; }, { "routeClick": "routeClick"; }, never, never, false, never>;
}
