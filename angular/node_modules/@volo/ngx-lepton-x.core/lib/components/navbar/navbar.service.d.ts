import { NavigationEnd, Router } from '@angular/router';
import { LpxNavbarItem } from './models';
import * as i0 from "@angular/core";
export declare class NavbarService {
    protected readonly router: Router;
    menuItems: LpxNavbarItem[];
    private store;
    navbarItems$: import("rxjs").Observable<LpxNavbarItem[]>;
    groupedNavbarItems$: import("rxjs").Observable<{
        group: string;
        items: LpxNavbarItem[];
    }[] | undefined>;
    constructor();
    addNavbarItems(...menuItems: LpxNavbarItem[]): void;
    setNavbarItems(...menuItems: LpxNavbarItem[]): void;
    addChildren(id: string, ...menuItems: LpxNavbarItem[]): void;
    findByLink(link: string, items?: LpxNavbarItem[]): {
        item: LpxNavbarItem | undefined;
        location: number[];
    };
    expandItemByLink$(): import("rxjs").Observable<NavigationEnd>;
    expandItems(): void;
    getRouteItem(): {
        item: LpxNavbarItem | undefined;
        location: number[];
    };
    calculateExpandState(items: LpxNavbarItem[], indexes: Array<number>): LpxNavbarItem[];
    collapseChildren(children: Array<LpxNavbarItem>): Array<LpxNavbarItem>;
    private findById;
    private findByProp;
    private addContainerLinks;
    static ɵfac: i0.ɵɵFactoryDeclaration<NavbarService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NavbarService>;
}
