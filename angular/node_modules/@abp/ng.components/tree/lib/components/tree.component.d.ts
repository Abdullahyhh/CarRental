import { EventEmitter, OnInit, TemplateRef } from '@angular/core';
import { NgbDropdown } from '@ng-bootstrap/ng-bootstrap';
import { NzFormatBeforeDropEvent, NzFormatEmitEvent, NzTreeNode } from 'ng-zorro-antd/tree';
import { TreeNodeTemplateDirective } from '../templates/tree-node-template.directive';
import { ExpandedIconTemplateDirective } from '../templates/expanded-icon-template.directive';
import * as i0 from "@angular/core";
export type DropEvent = NzFormatEmitEvent & {
    pos: number;
};
export declare class TreeComponent implements OnInit {
    private lazyLoadService;
    private subscriptionService;
    private cdr;
    private disableTreeStyleLoading;
    dropPosition: number;
    dropdowns: {
        [key: string]: NgbDropdown;
    };
    menu: TemplateRef<any>;
    customNodeTemplate: TreeNodeTemplateDirective;
    expandedIconTemplate: ExpandedIconTemplateDirective;
    readonly checkedKeysChange: EventEmitter<any>;
    readonly expandedKeysChange: EventEmitter<string[]>;
    readonly selectedNodeChange: EventEmitter<any>;
    readonly dropOver: EventEmitter<DropEvent>;
    readonly nzExpandChange: EventEmitter<NzFormatEmitEvent>;
    noAnimation: boolean;
    draggable: boolean;
    checkable: boolean;
    checkStrictly: boolean;
    checkedKeys: any[];
    nodes: any[];
    expandedKeys: string[];
    selectedNode: any;
    changeCheckboxWithNode: boolean;
    isNodeSelected: (node: any) => boolean;
    beforeDrop: (event: NzFormatBeforeDropEvent) => import("rxjs").Observable<boolean>;
    ngOnInit(): void;
    private loadStyle;
    private findNode;
    onSelectedNodeChange(node: NzTreeNode): void;
    onCheckboxChange(event: any): void;
    onExpandedKeysChange(event: any): void;
    onDrop(event: DropEvent): void;
    initDropdown(key: string, dropdown: NgbDropdown): void;
    setSelectedNode(node: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TreeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TreeComponent, "abp-tree", never, { "noAnimation": { "alias": "noAnimation"; "required": false; }; "draggable": { "alias": "draggable"; "required": false; }; "checkable": { "alias": "checkable"; "required": false; }; "checkStrictly": { "alias": "checkStrictly"; "required": false; }; "checkedKeys": { "alias": "checkedKeys"; "required": false; }; "nodes": { "alias": "nodes"; "required": false; }; "expandedKeys": { "alias": "expandedKeys"; "required": false; }; "selectedNode": { "alias": "selectedNode"; "required": false; }; "changeCheckboxWithNode": { "alias": "changeCheckboxWithNode"; "required": false; }; "isNodeSelected": { "alias": "isNodeSelected"; "required": false; }; "beforeDrop": { "alias": "beforeDrop"; "required": false; }; }, { "checkedKeysChange": "checkedKeysChange"; "expandedKeysChange": "expandedKeysChange"; "selectedNodeChange": "selectedNodeChange"; "dropOver": "dropOver"; "nzExpandChange": "nzExpandChange"; }, ["menu", "customNodeTemplate", "expandedIconTemplate"], never, false, never>;
}
