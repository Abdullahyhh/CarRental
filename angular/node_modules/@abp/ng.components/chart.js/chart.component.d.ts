import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import * as i0 from "@angular/core";
export declare class ChartComponent implements AfterViewInit, OnDestroy, OnChanges {
    el: ElementRef;
    private cdr;
    type: string;
    data: any;
    options: any;
    plugins: any[];
    width?: string;
    height?: string;
    responsive: boolean;
    dataSelect: EventEmitter<any>;
    initialized: EventEmitter<boolean>;
    canvas: ElementRef<HTMLCanvasElement>;
    chart: any;
    constructor(el: ElementRef, cdr: ChangeDetectorRef);
    ngAfterViewInit(): void;
    onCanvasClick(event: MouseEvent): void;
    private initChart;
    getCanvas: () => HTMLCanvasElement;
    getBase64Image: () => any;
    generateLegend: () => any;
    refresh: () => void;
    reinit: () => void;
    ngOnDestroy(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ChartComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ChartComponent, "abp-chart", ["abpChart"], { "type": { "alias": "type"; "required": false; }; "data": { "alias": "data"; "required": false; }; "options": { "alias": "options"; "required": false; }; "plugins": { "alias": "plugins"; "required": false; }; "width": { "alias": "width"; "required": false; }; "height": { "alias": "height"; "required": false; }; "responsive": { "alias": "responsive"; "required": false; }; }, { "dataSelect": "dataSelect"; "initialized": "initialized"; }, never, never, false, never>;
}
