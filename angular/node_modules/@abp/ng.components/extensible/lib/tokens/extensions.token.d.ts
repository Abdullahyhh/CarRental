import { InjectionToken } from '@angular/core';
import { ActionCallback } from '../models/actions';
import { ExtensionsService } from '../services/extensions.service';
import { Observable } from 'rxjs';
import { ePropType } from '../enums/props.enum';
import { FormProp } from '../models/form-props';
export declare const EXTENSIONS_IDENTIFIER: InjectionToken<string>;
export type ActionKeys = Extract<'entityActions' | 'toolbarActions', keyof ExtensionsService>;
export declare const EXTENSIONS_ACTION_TYPE: InjectionToken<ActionKeys>;
export declare const EXTENSIONS_ACTION_DATA: InjectionToken<Readonly<Omit<import("../models/actions").ActionData<any>, "data">>>;
export declare const EXTENSIONS_ACTION_CALLBACK: InjectionToken<ActionCallback<unknown>>;
export declare const PROP_DATA_STREAM: InjectionToken<Observable<any>>;
type EntityPropTypeClassMap = {
    [key in ePropType]: string;
};
export type EntityPropTypeClass = Partial<EntityPropTypeClassMap>;
export declare const ENTITY_PROP_TYPE_CLASSES: InjectionToken<Partial<EntityPropTypeClassMap>>;
export declare const EXTENSIONS_FORM_PROP: InjectionToken<FormProp<any>>;
export declare const EXTENSIONS_FORM_PROP_DATA: InjectionToken<unknown>;
export {};
