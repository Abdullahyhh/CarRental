import { AfterViewInit, ChangeDetectorRef, EventEmitter, OnChanges, SimpleChanges, TemplateRef, TrackByFunction } from '@angular/core';
import { Observable } from 'rxjs';
import { ConfigStateService, ListService, PermissionService } from '@abp/ng.core';
import { EntityActionList } from '../../models/entity-actions';
import { EntityProp, EntityPropList } from '../../models/entity-props';
import { PropData } from '../../models/props';
import * as i0 from "@angular/core";
export declare class ExtensibleTableComponent<R = any> implements OnChanges, AfterViewInit {
    #private;
    readonly getInjected: any;
    protected readonly cdr: ChangeDetectorRef;
    protected readonly locale: string;
    protected readonly config: ConfigStateService;
    protected readonly entityPropTypeClasses: Partial<{
        boolean: string;
        date: string;
        datetime: string;
        email: string;
        enum: string;
        hidden: string;
        multiselect: string;
        number: string;
        password: string;
        passwordinputgroup: string;
        string: string;
        text: string;
        time: string;
        typeahead: string;
    }>;
    protected readonly permissionService: PermissionService;
    protected _actionsText: string;
    set actionsText(value: string);
    get actionsText(): string;
    data: R[];
    list: ListService;
    recordsTotal: number;
    set actionsColumnWidth(width: number);
    actionsTemplate?: TemplateRef<any>;
    tableActivate: EventEmitter<any>;
    hasAtLeastOnePermittedAction: boolean;
    readonly columnWidths: number[];
    readonly propList: EntityPropList<R>;
    readonly actionList: EntityActionList<R>;
    readonly trackByFn: TrackByFunction<EntityProp<R>>;
    constructor();
    private setColumnWidths;
    private getDate;
    private getIcon;
    private getEnum;
    getContent(prop: EntityProp<R>, data: PropData): Observable<string>;
    ngOnChanges({ data }: SimpleChanges): void;
    isVisibleActions(rowData: any): boolean;
    ngAfterViewInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ExtensibleTableComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ExtensibleTableComponent<any>, "abp-extensible-table", ["abpExtensibleTable"], { "actionsText": { "alias": "actionsText"; "required": false; }; "data": { "alias": "data"; "required": false; }; "list": { "alias": "list"; "required": false; }; "recordsTotal": { "alias": "recordsTotal"; "required": false; }; "actionsColumnWidth": { "alias": "actionsColumnWidth"; "required": false; }; "actionsTemplate": { "alias": "actionsTemplate"; "required": false; }; }, { "tableActivate": "tableActivate"; }, never, never, true, never>;
}
