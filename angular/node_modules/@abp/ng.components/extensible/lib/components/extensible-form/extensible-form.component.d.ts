import { TrackByService } from '@abp/ng.core';
import { ChangeDetectorRef, QueryList } from '@angular/core';
import { UntypedFormGroup } from '@angular/forms';
import { FormProp, FormPropList, GroupedFormPropList } from '../../models/form-props';
import { ExtensibleFormPropComponent } from './extensible-form-prop.component';
import * as i0 from "@angular/core";
export declare class ExtensibleFormComponent<R = any> {
    readonly cdRef: ChangeDetectorRef;
    readonly track: TrackByService<any>;
    private readonly container;
    private readonly extensions;
    private readonly identifier;
    formProps: QueryList<ExtensibleFormPropComponent>;
    set selectedRecord(record: R);
    extraPropertiesKey: string;
    groupedPropList: GroupedFormPropList;
    groupedPropListOfArray: FormProp<any>[][];
    record: R;
    get form(): UntypedFormGroup;
    get extraProperties(): UntypedFormGroup;
    createGroupedList(propList: FormPropList<R>): GroupedFormPropList<any>;
    isAnyGroupMemberVisible(index: number, data: any): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ExtensibleFormComponent<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ExtensibleFormComponent<any>, "abp-extensible-form", ["abpExtensibleForm"], { "selectedRecord": { "alias": "selectedRecord"; "required": false; }; }, {}, never, never, true, never>;
}
