import { ApplicationRef, OnInit, ElementRef, Type, AfterViewInit, OnDestroy, EnvironmentInjector, DestroyRef } from '@angular/core';
import { Router } from '@angular/router';
import { Subject } from 'rxjs';
import { LocalizationParam } from '@abp/ng.core';
import { ErrorScreenErrorCodes } from '../../models';
import * as i0 from "@angular/core";
export declare class HttpErrorWrapperComponent implements OnInit, AfterViewInit, OnDestroy {
    protected readonly destroyRef: DestroyRef;
    protected readonly document: Document;
    protected readonly window: Window & typeof globalThis;
    protected readonly router: Router;
    appRef: ApplicationRef;
    environmentInjector: EnvironmentInjector;
    status: ErrorScreenErrorCodes;
    title: LocalizationParam;
    details: LocalizationParam;
    customComponent: Type<any> | undefined;
    destroy$: Subject<void>;
    hideCloseIcon: boolean;
    backgroundColor: string;
    isHomeShow: boolean;
    containerRef?: ElementRef<HTMLDivElement>;
    get statusText(): string;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    goHome(): void;
    destroy(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<HttpErrorWrapperComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<HttpErrorWrapperComponent, "abp-http-error-wrapper", never, {}, {}, never, never, false, never>;
}
