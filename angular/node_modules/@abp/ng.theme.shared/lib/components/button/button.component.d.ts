import { ABP } from '@abp/ng.core';
import { ElementRef, EventEmitter, OnInit, Renderer2 } from '@angular/core';
import * as i0 from "@angular/core";
export declare class ButtonComponent implements OnInit {
    private renderer;
    buttonId: string;
    buttonClass: string;
    buttonType: string;
    formName?: string;
    iconClass?: string;
    loading: boolean;
    disabled: boolean | undefined;
    attributes?: ABP.Dictionary<string>;
    readonly click: EventEmitter<MouseEvent>;
    readonly focus: EventEmitter<FocusEvent>;
    readonly blur: EventEmitter<FocusEvent>;
    readonly abpClick: EventEmitter<MouseEvent>;
    readonly abpFocus: EventEmitter<FocusEvent>;
    readonly abpBlur: EventEmitter<FocusEvent>;
    buttonRef: ElementRef<HTMLButtonElement>;
    get icon(): string;
    constructor(renderer: Renderer2);
    ngOnInit(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ButtonComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ButtonComponent, "abp-button", never, { "buttonId": { "alias": "buttonId"; "required": false; }; "buttonClass": { "alias": "buttonClass"; "required": false; }; "buttonType": { "alias": "buttonType"; "required": false; }; "formName": { "alias": "formName"; "required": false; }; "iconClass": { "alias": "iconClass"; "required": false; }; "loading": { "alias": "loading"; "required": false; }; "disabled": { "alias": "disabled"; "required": false; }; "attributes": { "alias": "attributes"; "required": false; }; }, { "click": "click"; "focus": "focus"; "blur": "blur"; "abpClick": "abpClick"; "abpFocus": "abpFocus"; "abpBlur": "abpBlur"; }, never, ["*"], false, never>;
}
