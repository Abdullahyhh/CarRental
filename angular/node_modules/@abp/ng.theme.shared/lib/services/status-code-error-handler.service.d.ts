import { Confirmation, CustomHttpErrorHandlerService } from '../models';
import { AuthService, LocalizationParam } from '@abp/ng.core';
import { Observable } from 'rxjs';
import { ConfirmationService } from './confirmation.service';
import { CreateErrorComponentService } from './create-error-component.service';
import * as i0 from "@angular/core";
export declare class StatusCodeErrorHandlerService implements CustomHttpErrorHandlerService {
    protected readonly confirmationService: ConfirmationService;
    protected readonly createErrorComponentService: CreateErrorComponentService;
    protected readonly authService: AuthService;
    protected readonly handledStatusCodes: readonly [401, 403, 404, 500];
    protected status: (typeof this.handledStatusCodes)[number];
    readonly priority: 0;
    protected navigateToLogin(): void;
    protected showConfirmation(message: LocalizationParam, title: LocalizationParam): Observable<Confirmation.Status>;
    protected showPage(): void;
    canHandle(error: any): boolean;
    execute(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<StatusCodeErrorHandlerService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<StatusCodeErrorHandlerService>;
}
