import { ComponentRef, EnvironmentInjector, Injector, RendererFactory2 } from '@angular/core';
import { RouterEvents } from '@abp/ng.core';
import { HttpErrorWrapperComponent } from '../components/http-error-wrapper/http-error-wrapper.component';
import { ErrorScreenErrorCodes } from '../models/common';
import * as i0 from "@angular/core";
export declare class CreateErrorComponentService {
    protected readonly document: Document;
    protected readonly rendererFactory: RendererFactory2;
    protected readonly routerEvents: RouterEvents;
    protected readonly injector: Injector;
    protected readonly envInjector: EnvironmentInjector;
    protected readonly httpErrorConfig: import("../models/common").HttpErrorConfig;
    componentRef: ComponentRef<HttpErrorWrapperComponent> | null;
    constructor();
    protected listenToRouterDataResolved(): void;
    protected getErrorHostElement(): HTMLElement;
    protected isCloseIconHidden(): boolean;
    canCreateCustomError(status: ErrorScreenErrorCodes): boolean;
    execute(instance: Partial<HttpErrorWrapperComponent>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<CreateErrorComponentService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CreateErrorComponentService>;
}
