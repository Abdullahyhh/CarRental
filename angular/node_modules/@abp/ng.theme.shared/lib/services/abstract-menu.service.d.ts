import { BehaviorSubject, Observable } from 'rxjs';
import { NavItem } from '../models/nav-item';
import { Type } from '@angular/core';
import { SortableItem } from '@abp/ng.core';
export declare abstract class AbstractMenuService<T extends NavItem> {
    protected abstract baseClass: Type<any>;
    protected readonly sortFn: (a: SortableItem, b: SortableItem) => number;
    protected _items$: BehaviorSubject<T[]>;
    get items(): T[];
    get items$(): Observable<T[]>;
    constructor();
    addItems(newItems: T[]): void;
    removeItem(id: string | number): void;
    patchItem(id: string | number, item: Partial<Omit<T, 'id'>>): void;
    sortItems: (a: T, b: T) => number;
}
