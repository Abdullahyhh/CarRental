import { ChangeDetectorRef, OnChanges, OnInit, DoCheck, SimpleChanges, DestroyRef, ViewContainerRef, Renderer2 } from '@angular/core';
import { DatatableComponent } from '@swimlane/ngx-datatable';
import { ListService, LocalizationService } from '@abp/ng.core';
import * as i0 from "@angular/core";
export declare class NgxDatatableListDirective implements OnChanges, OnInit, DoCheck {
    protected readonly table: DatatableComponent;
    protected readonly cdRef: ChangeDetectorRef;
    protected readonly destroyRef: DestroyRef;
    protected readonly localizationService: LocalizationService;
    protected readonly ngxDatatableMessages: Partial<import("../tokens/ngx-datatable-messages.token").NgxDatatableMessages>;
    protected readonly viewContainerRef: ViewContainerRef;
    protected readonly renderer: Renderer2;
    list: ListService;
    constructor();
    ngDoCheck(): void;
    ngOnInit(): void;
    ngOnChanges({ list }: SimpleChanges): void;
    protected subscribeToRequestStatus(): void;
    protected updateLoadingIndicator(): void;
    protected replaceLoadingIndicator(parent: Element, placeholder: Element): void;
    protected setInitialValues(): void;
    protected subscribeToSort(): void;
    protected subscribeToPage(): void;
    protected subscribeToQuery(): void;
    protected setTablePage(pageNum: number): void;
    protected refreshPageIfDataExist(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<NgxDatatableListDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<NgxDatatableListDirective, "ngx-datatable[list]", ["ngxDatatableList"], { "list": { "alias": "list"; "required": false; }; }, {}, never, never, true, never>;
}
