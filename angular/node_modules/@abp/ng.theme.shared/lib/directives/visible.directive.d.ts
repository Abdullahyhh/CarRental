import { OnInit, OnDestroy, ViewContainerRef, TemplateRef } from '@angular/core';
import { Observable, Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export declare class AbpVisibleDirective implements OnDestroy, OnInit {
    private viewContainerRef;
    private templateRef;
    conditionSubscription: Subscription | undefined;
    isVisible: boolean | undefined;
    set abpVisible(value: boolean | Promise<boolean> | Observable<boolean> | undefined | null);
    private condition$;
    constructor(viewContainerRef: ViewContainerRef, templateRef: TemplateRef<unknown>);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private subscribeToCondition;
    private updateVisibility;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbpVisibleDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<AbpVisibleDirective, "[abpVisible]", never, { "abpVisible": { "alias": "abpVisible"; "required": false; }; }, {}, never, never, true, never>;
}
