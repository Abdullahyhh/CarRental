import * as i0 from '@angular/core';
import { provideAppInitializer, inject, makeEnvironmentProviders, NgModule } from '@angular/core';
import { RoutesService } from '@abp/ng.core';

const IDENTITY_ROUTE_PROVIDERS = [
    provideAppInitializer(() => {
        configureRoutes();
    }),
];
function configureRoutes() {
    const routesService = inject(RoutesService);
    routesService.add([
        {
            path: undefined,
            name: "AbpIdentity::Menu:IdentityManagement" /* eIdentityRouteNames.IdentityManagement */,
            parentName: "AbpUiNavigation::Menu:Administration" /* eThemeSharedRouteNames.Administration */,
            requiredPolicy: "AbpIdentity.Roles || AbpIdentity.Users" /* eIdentityPolicyNames.IdentityManagement */,
            iconClass: 'fa fa-id-card-o',
            layout: "application" /* eLayoutType.application */,
            order: 1,
        },
        {
            path: '/identity/roles',
            name: "AbpIdentity::Roles" /* eIdentityRouteNames.Roles */,
            parentName: "AbpIdentity::Menu:IdentityManagement" /* eIdentityRouteNames.IdentityManagement */,
            requiredPolicy: "AbpIdentity.Roles" /* eIdentityPolicyNames.Roles */,
            order: 1,
        },
        {
            path: '/identity/users',
            name: "AbpIdentity::Users" /* eIdentityRouteNames.Users */,
            parentName: "AbpIdentity::Menu:IdentityManagement" /* eIdentityRouteNames.IdentityManagement */,
            requiredPolicy: "AbpIdentity.Users" /* eIdentityPolicyNames.Users */,
            order: 2,
        },
    ]);
}

function provideIdentityConfig() {
    return makeEnvironmentProviders([IDENTITY_ROUTE_PROVIDERS]);
}

/**
 * @deprecated IdentityConfigModule is deprecated use `provideIdentityConfig` *function* instead.
 */
class IdentityConfigModule {
    static forRoot() {
        return {
            ngModule: IdentityConfigModule,
            providers: [provideIdentityConfig()],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.1.8", ngImport: i0, type: IdentityConfigModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "19.1.8", ngImport: i0, type: IdentityConfigModule }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "19.1.8", ngImport: i0, type: IdentityConfigModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.1.8", ngImport: i0, type: IdentityConfigModule, decorators: [{
            type: NgModule
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { IDENTITY_ROUTE_PROVIDERS, IdentityConfigModule, configureRoutes, provideIdentityConfig };
//# sourceMappingURL=abp-ng.identity-config.mjs.map
