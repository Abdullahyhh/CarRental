import { ListService, PagedResultDto } from '@abp/ng.core';
import { IdentityRoleDto, IdentityRoleService } from '@abp/ng.identity/proxy';
import { ePermissionManagementComponents } from '@abp/ng.permission-management';
import { ConfirmationService, ToasterService } from '@abp/ng.theme.shared';
import { OnInit } from '@angular/core';
import { UntypedFormGroup } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class RolesComponent implements OnInit {
    protected readonly list: ListService<any>;
    protected readonly confirmationService: ConfirmationService;
    protected readonly toasterService: ToasterService;
    private readonly injector;
    protected readonly service: IdentityRoleService;
    data: PagedResultDto<IdentityRoleDto>;
    form: UntypedFormGroup;
    selected?: IdentityRoleDto;
    isModalVisible: boolean;
    visiblePermissions: boolean;
    providerKey?: string;
    modalBusy: boolean;
    permissionManagementKey: ePermissionManagementComponents;
    onVisiblePermissionChange: (event: boolean) => void;
    ngOnInit(): void;
    buildForm(): void;
    openModal(): void;
    add(): void;
    edit(id: string): void;
    save(): void;
    delete(id: string, name: string): void;
    private hookToQuery;
    openPermissionsModal(providerKey: string): void;
    sort(data: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<RolesComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<RolesComponent, "abp-roles", never, {}, {}, never, never, false, never>;
}
