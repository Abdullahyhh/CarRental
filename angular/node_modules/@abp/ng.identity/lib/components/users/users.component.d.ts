import { ListService, PagedResultDto } from '@abp/ng.core';
import { IdentityRoleDto, IdentityUserDto, IdentityUserService } from '@abp/ng.identity/proxy';
import { ePermissionManagementComponents } from '@abp/ng.permission-management';
import { ConfirmationService, eFormComponets, ToasterService } from '@abp/ng.theme.shared';
import { OnInit, TemplateRef, TrackByFunction } from '@angular/core';
import { AbstractControl, UntypedFormGroup } from '@angular/forms';
import * as i0 from "@angular/core";
export declare class UsersComponent implements OnInit {
    protected readonly list: ListService<any>;
    protected readonly confirmationService: ConfirmationService;
    protected readonly service: IdentityUserService;
    protected readonly toasterService: ToasterService;
    private readonly fb;
    private readonly injector;
    data: PagedResultDto<IdentityUserDto>;
    modalContent: TemplateRef<any>;
    form: UntypedFormGroup;
    selected?: IdentityUserDto;
    selectedUserRoles?: IdentityRoleDto[];
    roles?: IdentityRoleDto[];
    visiblePermissions: boolean;
    providerKey?: string;
    isModalVisible?: boolean;
    modalBusy: boolean;
    permissionManagementKey: ePermissionManagementComponents;
    entityDisplayName: string;
    inputKey: eFormComponets;
    trackByFn: TrackByFunction<AbstractControl>;
    onVisiblePermissionChange: (event: boolean) => void;
    get roleGroups(): UntypedFormGroup[];
    ngOnInit(): void;
    buildForm(): void;
    openModal(): void;
    add(): void;
    edit(id: string): void;
    save(): void;
    delete(id: string, userName: string): void;
    sort(data: any): void;
    private hookToQuery;
    openPermissionsModal(providerKey: string, entityDisplayName?: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<UsersComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<UsersComponent, "abp-users", never, {}, {}, never, never, false, never>;
}
