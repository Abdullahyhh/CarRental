{"version":3,"file":"abp-ng.permission-management.mjs","sources":["../../../../packages/permission-management/src/lib/components/permission-management.component.ts","../../../../packages/permission-management/src/lib/components/permission-management.component.html","../../../../packages/permission-management/src/lib/permission-management.module.ts","../../../../packages/permission-management/src/abp-ng.permission-management.ts"],"sourcesContent":["import { ConfigStateService, CurrentUserDto } from '@abp/ng.core';\r\nimport { LocaleDirection, ToasterService } from '@abp/ng.theme.shared';\r\nimport {\r\n  GetPermissionListResultDto,\r\n  PermissionGrantInfoDto,\r\n  PermissionGroupDto,\r\n  PermissionsService,\r\n  ProviderInfoDto,\r\n  UpdatePermissionDto,\r\n} from '@abp/ng.permission-management/proxy';\r\nimport {\r\n  Component,\r\n  computed,\r\n  ElementRef,\r\n  EventEmitter,\r\n  inject,\r\n  Input,\r\n  Output,\r\n  QueryList,\r\n  signal,\r\n  TrackByFunction,\r\n  ViewChildren,\r\n} from '@angular/core';\r\nimport { concat, of } from 'rxjs';\r\nimport { finalize, switchMap, take, tap } from 'rxjs/operators';\r\nimport { PermissionManagement } from '../models/permission-management';\r\n\r\ntype PermissionWithStyle = PermissionGrantInfoDto & {\r\n  style: string;\r\n};\r\n\r\ntype PermissionWithGroupName = PermissionGrantInfoDto & {\r\n  groupName: string;\r\n};\r\n\r\n@Component({\r\n  standalone: false,\r\n  selector: 'abp-permission-management',\r\n  templateUrl: './permission-management.component.html',\r\n  exportAs: 'abpPermissionManagement',\r\n  styles: [\r\n    `\r\n      .overflow-scroll {\r\n        max-height: 70vh;\r\n        overflow-y: scroll;\r\n      }\r\n\r\n      .scroll-in-modal {\r\n        overflow: auto;\r\n        max-height: calc(100vh - 15rem);\r\n      }\r\n\r\n      fieldset legend {\r\n        float: none;\r\n        width: auto;\r\n      }\r\n\r\n      .lpx-scroll-pills-container ul {\r\n        display: block;\r\n        max-height: 500px;\r\n        overflow-y: auto;\r\n      }\r\n\r\n      .lpx-scroll-pills-container .tab-content {\r\n        padding-top: 0 !important;\r\n        padding-bottom: 0 !important;\r\n      }\r\n\r\n      .lpx-scroll-pills-container ul li {\r\n        margin-bottom: 10px;\r\n        border-radius: 10px;\r\n      }\r\n\r\n      .lpx-scroll-pills-container ul li a.active {\r\n        color: #fff !important;\r\n        border-color: #6c5dd3 !important;\r\n        background-color: #6c5dd3 !important;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class PermissionManagementComponent\r\n  implements\r\n    PermissionManagement.PermissionManagementComponentInputs,\r\n    PermissionManagement.PermissionManagementComponentOutputs\r\n{\r\n  protected readonly service = inject(PermissionsService);\r\n  protected readonly configState = inject(ConfigStateService);\r\n  protected readonly toasterService = inject(ToasterService);\r\n\r\n  @Input()\r\n  readonly providerName!: string;\r\n\r\n  @Input()\r\n  readonly providerKey!: string;\r\n\r\n  @Input()\r\n  readonly hideBadges = false;\r\n\r\n  protected _visible = false;\r\n\r\n  @Input()\r\n  entityDisplayName: string | undefined;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    if (value === this._visible) {\r\n      return;\r\n    }\r\n\r\n    if (value) {\r\n      this.openModal().subscribe(() => {\r\n        this._visible = true;\r\n        this.visibleChange.emit(true);\r\n        concat(this.selectAllInAllTabsRef.changes, this.selectAllInThisTabsRef.changes)\r\n          .pipe(take(1))\r\n          .subscribe(() => {\r\n            this.initModal();\r\n          });\r\n      });\r\n    } else {\r\n      this.setSelectedGroup(null);\r\n      this._visible = false;\r\n      this.visibleChange.emit(false);\r\n      this.filter.set('');\r\n    }\r\n  }\r\n\r\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\r\n\r\n  @ViewChildren('selectAllInThisTabsRef')\r\n  selectAllInThisTabsRef!: QueryList<ElementRef<HTMLInputElement>>;\r\n  @ViewChildren('selectAllInAllTabsRef')\r\n  selectAllInAllTabsRef!: QueryList<ElementRef<HTMLInputElement>>;\r\n\r\n  data: GetPermissionListResultDto = { groups: [], entityDisplayName: '' };\r\n\r\n  selectedGroup?: PermissionGroupDto | null;\r\n\r\n  permissions: PermissionWithGroupName[] = [];\r\n\r\n  selectThisTab = false;\r\n\r\n  selectAllTab = false;\r\n\r\n  disableSelectAllTab = false;\r\n\r\n  disabledSelectAllInAllTabs = false;\r\n\r\n  modalBusy = false;\r\n\r\n  filter = signal<string>('');\r\n\r\n  selectedGroupPermissions: PermissionWithStyle[] = [];\r\n\r\n  permissionGroupSignal = signal<PermissionGroupDto[]>([]);\r\n\r\n  permissionGroups = computed(() => {\r\n    const search = this.filter().toLowerCase().trim();\r\n    let groups = this.permissionGroupSignal();\r\n\r\n    if (!search) {\r\n      this.setSelectedGroup(groups[0]);\r\n      return groups;\r\n    }\r\n\r\n    const includesSearch = text => text.toLowerCase().includes(search);\r\n    groups = groups.filter(group =>\r\n      group.permissions.some(\r\n        permission => includesSearch(permission.displayName) || includesSearch(group.displayName),\r\n      ),\r\n    );\r\n\r\n    if (groups.length) {\r\n      this.setSelectedGroup(groups[0]);\r\n    } else {\r\n      this.selectedGroupPermissions = [];\r\n    }\r\n\r\n    return groups;\r\n  });\r\n\r\n  trackByFn: TrackByFunction<PermissionGroupDto> = (_, item) => item.name;\r\n\r\n  getChecked(name: string) {\r\n    return (this.permissions.find(per => per.name === name) || { isGranted: false }).isGranted;\r\n  }\r\n\r\n  setSelectedGroup(group: PermissionGroupDto) {\r\n    this.selectedGroup = group;\r\n    if (!this.selectedGroup) {\r\n      this.selectedGroupPermissions = [];\r\n      return;\r\n    }\r\n\r\n    const margin = `margin-${\r\n      (document.body.dir as LocaleDirection) === 'rtl' ? 'right' : 'left'\r\n    }.px`;\r\n\r\n    const permissions =\r\n      (this.data.groups.find(group => group.name === this.selectedGroup?.name) || {}).permissions ||\r\n      [];\r\n    this.selectedGroupPermissions = permissions.map(\r\n      permission =>\r\n        ({\r\n          ...permission,\r\n          style: { [margin]: findMargin(permissions, permission) },\r\n          isGranted: (this.permissions.find(per => per.name === permission.name) || {}).isGranted,\r\n        }) as unknown as PermissionWithStyle,\r\n    );\r\n  }\r\n\r\n  setDisabled(permissions: PermissionGrantInfoDto[]) {\r\n    if (permissions.length) {\r\n      this.disableSelectAllTab = permissions.every(\r\n        permission =>\r\n          permission.isGranted &&\r\n          permission.grantedProviders?.every(p => p.providerName !== this.providerName),\r\n      );\r\n    } else {\r\n      this.disableSelectAllTab = false;\r\n    }\r\n  }\r\n\r\n  isGrantedByOtherProviderName(grantedProviders: ProviderInfoDto[]): boolean {\r\n    if (grantedProviders.length) {\r\n      return grantedProviders.findIndex(p => p.providerName !== this.providerName) > -1;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onClickCheckbox(clickedPermission: PermissionGrantInfoDto) {\r\n    const { isGranted, grantedProviders } = clickedPermission;\r\n    if (isGranted && this.isGrantedByOtherProviderName(grantedProviders)) {\r\n      return;\r\n    }\r\n\r\n    this.setSelectedGroup(this.selectedGroup);\r\n    setTimeout(() => {\r\n      this.updatePermissionStatus(clickedPermission);\r\n      this.updateSelectedGroupPermissions(clickedPermission);\r\n      this.setParentClicked(clickedPermission);\r\n      this.setTabCheckboxState();\r\n      this.setGrantCheckboxState();\r\n    }, 0);\r\n  }\r\n\r\n  updatePermissionStatus(clickedPermission: PermissionGrantInfoDto) {\r\n    this.permissions = this.permissions.map(permission => {\r\n      const isExactMatch = clickedPermission.name == permission.name;\r\n      const isParentOfPermission = clickedPermission.parentName === permission.name;\r\n      const isChildOfPermission = clickedPermission.name === permission.parentName;\r\n\r\n      if (isExactMatch) {\r\n        return { ...permission, isGranted: !permission.isGranted };\r\n      }\r\n\r\n      if (isChildOfPermission && permission.isGranted) {\r\n        return { ...permission, isGranted: false };\r\n      }\r\n\r\n      if (isParentOfPermission && !permission.isGranted) {\r\n        return { ...permission, isGranted: true };\r\n      }\r\n\r\n      return permission;\r\n    });\r\n  }\r\n\r\n  setParentClicked(clickedPermission: PermissionGrantInfoDto) {\r\n    if (clickedPermission.parentName) {\r\n      const parentPermissions = findParentPermissions(this.permissions, clickedPermission);\r\n      if (parentPermissions.length > 0) {\r\n        const parentNames = new Set(parentPermissions.map(parent => parent.name));\r\n\r\n        this.permissions = this.permissions.map(per => {\r\n          let updatedIsGranted = per.isGranted;\r\n\r\n          if (per.parentName === clickedPermission.name && !clickedPermission.isGranted) {\r\n            updatedIsGranted = false;\r\n          }\r\n\r\n          if (parentNames.has(per.name)) {\r\n            updatedIsGranted = true;\r\n          }\r\n\r\n          return { ...per, isGranted: updatedIsGranted };\r\n        });\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.permissions = this.permissions.map(per => {\r\n      const parents = findParentPermissions(this.permissions, per);\r\n      if (parents.length > 0) {\r\n        const rootParent = parents[parents.length - 1];\r\n\r\n        if (rootParent.name === clickedPermission.name && !rootParent.isGranted) {\r\n          return { ...per, isGranted: false };\r\n        }\r\n      }\r\n      return per;\r\n    });\r\n  }\r\n\r\n  updateSelectedGroupPermissions(clickedPermissions: PermissionGrantInfoDto) {\r\n    this.selectedGroupPermissions = this.selectedGroupPermissions.map(per => {\r\n      if (per.name === clickedPermissions.name) {\r\n        per.isGranted = !per.isGranted;\r\n      }\r\n      return per;\r\n    });\r\n  }\r\n\r\n  setTabCheckboxState() {\r\n    const selectablePermissions = this.permissions.filter(per =>\r\n      per.grantedProviders.every(p => p.providerName === this.providerName),\r\n    );\r\n    const selectedPermissions = selectablePermissions.filter(per => per.isGranted);\r\n    const element = document.querySelector('#select-all-in-this-tabs') as any;\r\n    if (!element) {\r\n      return;\r\n    }\r\n\r\n    if (selectedPermissions.length === selectablePermissions.length) {\r\n      element.indeterminate = false;\r\n      this.selectThisTab = true;\r\n    } else if (selectedPermissions.length === 0) {\r\n      element.indeterminate = false;\r\n      this.selectThisTab = false;\r\n    } else {\r\n      element.indeterminate = true;\r\n    }\r\n  }\r\n\r\n  setGrantCheckboxState() {\r\n    const selectablePermissions = this.permissions.filter(per =>\r\n      per.grantedProviders.every(p => p.providerName === this.providerName),\r\n    );\r\n    const selectedAllPermissions = selectablePermissions.filter(per => per.isGranted);\r\n    const checkboxElement = document.querySelector('#select-all-in-all-tabs') as any;\r\n\r\n    if (selectedAllPermissions.length === selectablePermissions.length) {\r\n      checkboxElement.indeterminate = false;\r\n      this.selectAllTab = true;\r\n    } else if (selectedAllPermissions.length === 0) {\r\n      checkboxElement.indeterminate = false;\r\n      this.selectAllTab = false;\r\n    } else {\r\n      checkboxElement.indeterminate = true;\r\n    }\r\n  }\r\n\r\n  onClickSelectThisTab() {\r\n    this.selectedGroupPermissions.forEach(permission => {\r\n      if (permission.isGranted && this.isGrantedByOtherProviderName(permission.grantedProviders))\r\n        return;\r\n\r\n      const index = this.permissions.findIndex(per => per.name === permission.name);\r\n\r\n      this.permissions = [\r\n        ...this.permissions.slice(0, index),\r\n        { ...this.permissions[index], isGranted: !this.selectThisTab },\r\n        ...this.permissions.slice(index + 1),\r\n      ];\r\n    });\r\n\r\n    this.setGrantCheckboxState();\r\n  }\r\n\r\n  onClickSelectAll() {\r\n    if (this.filter()) {\r\n      this.filter.set('');\r\n    }\r\n\r\n    this.permissions = this.permissions.map(permission => ({\r\n      ...permission,\r\n      isGranted:\r\n        this.isGrantedByOtherProviderName(permission.grantedProviders) || !this.selectAllTab,\r\n    }));\r\n\r\n    if (!this.disableSelectAllTab) {\r\n      this.selectThisTab = !this.selectAllTab;\r\n      this.setTabCheckboxState();\r\n      if (this.filter()) {\r\n        this.setGrantCheckboxState();\r\n      }\r\n    }\r\n    this.onChangeGroup(this.selectedGroup);\r\n  }\r\n\r\n  onChangeGroup(group: PermissionGroupDto) {\r\n    this.setDisabled(group.permissions);\r\n    this.setSelectedGroup(group);\r\n    this.setTabCheckboxState();\r\n  }\r\n\r\n  submit() {\r\n    const unchangedPermissions = getPermissions(this.data.groups);\r\n\r\n    const changedPermissions: UpdatePermissionDto[] = this.permissions\r\n      .filter(per =>\r\n        (unchangedPermissions.find(unchanged => unchanged.name === per.name) || {}).isGranted ===\r\n        per.isGranted\r\n          ? false\r\n          : true,\r\n      )\r\n      .map(({ name, isGranted }) => ({ name, isGranted }));\r\n\r\n    if (!changedPermissions.length) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n\r\n    this.modalBusy = true;\r\n    this.service\r\n      .update(this.providerName, this.providerKey, { permissions: changedPermissions })\r\n      .pipe(\r\n        switchMap(() =>\r\n          this.shouldFetchAppConfig() ? this.configState.refreshAppState() : of(null),\r\n        ),\r\n        finalize(() => (this.modalBusy = false)),\r\n      )\r\n      .subscribe(() => {\r\n        this.visible = false;\r\n        this.toasterService.success('AbpUi::SavedSuccessfully');\r\n      });\r\n  }\r\n\r\n  openModal() {\r\n    if (!this.providerKey || !this.providerName) {\r\n      throw new Error('Provider Key and Provider Name are required.');\r\n    }\r\n\r\n    return this.service.get(this.providerName, this.providerKey).pipe(\r\n      tap((permissionRes: GetPermissionListResultDto) => {\r\n        const { groups } = permissionRes || {};\r\n\r\n        this.data = permissionRes;\r\n        this.permissionGroupSignal.set(groups);\r\n        this.permissions = getPermissions(groups);\r\n        this.setSelectedGroup(groups[0]);\r\n\r\n        this.disabledSelectAllInAllTabs = this.permissions.every(\r\n          per =>\r\n            per.isGranted &&\r\n            per.grantedProviders.every(provider => provider.providerName !== this.providerName),\r\n        );\r\n      }),\r\n    );\r\n  }\r\n\r\n  initModal() {\r\n    // TODO: Refactor\r\n    setTimeout(() => {\r\n      this.setDisabled(this.selectedGroup?.permissions || []);\r\n      this.setTabCheckboxState();\r\n      this.setGrantCheckboxState();\r\n    });\r\n  }\r\n\r\n  getAssignedCount(groupName: string) {\r\n    return this.permissions.reduce(\r\n      (acc, val) => (val.groupName === groupName && val.isGranted ? acc + 1 : acc),\r\n      0,\r\n    );\r\n  }\r\n\r\n  shouldFetchAppConfig() {\r\n    const currentUser = this.configState.getOne('currentUser') as CurrentUserDto;\r\n\r\n    if (this.providerName === 'R') return currentUser.roles.some(role => role === this.providerKey);\r\n\r\n    if (this.providerName === 'U') return currentUser.id === this.providerKey;\r\n\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction findParentPermissions(\r\n  permissions: PermissionGrantInfoDto[],\r\n  permission: PermissionGrantInfoDto,\r\n): PermissionGrantInfoDto[] {\r\n  const permissionMap = new Map(permissions.map(p => [p.name, p]));\r\n  let currentPermission = permissionMap.get(permission.name) ?? null;\r\n  const parentPermissions: PermissionGrantInfoDto[] = [];\r\n\r\n  while (currentPermission && currentPermission.parentName) {\r\n    const parentPermission = permissionMap.get(currentPermission.parentName);\r\n    if (!parentPermission) {\r\n      break;\r\n    }\r\n    parentPermissions.push(parentPermission);\r\n    currentPermission = parentPermission;\r\n  }\r\n\r\n  return parentPermissions;\r\n}\r\n\r\nfunction findMargin(\r\n  permissions: PermissionGrantInfoDto[],\r\n  permission: PermissionGrantInfoDto,\r\n): number {\r\n  const parentPermission = permissions.find(per => per.name === permission.parentName);\r\n\r\n  if (parentPermission && parentPermission.parentName) {\r\n    let margin = 20;\r\n    return (margin += findMargin(permissions, parentPermission));\r\n  }\r\n\r\n  return parentPermission ? 20 : 0;\r\n}\r\n\r\nfunction getPermissions(groups: PermissionGroupDto[]): PermissionWithGroupName[] {\r\n  return groups.reduce(\r\n    (acc, val) => [\r\n      ...acc,\r\n      ...val.permissions.map<PermissionWithGroupName>(p => ({ ...p, groupName: val.name || '' })),\r\n    ],\r\n    [] as PermissionWithGroupName[],\r\n  );\r\n}\r\n","<abp-modal [(visible)]=\"visible\" [busy]=\"modalBusy\" [options]=\"{ size: 'lg', scrollable: false }\">\r\n  @if (data.entityDisplayName || entityDisplayName) {\r\n    <ng-template #abpHeader>\r\n      <h4>\r\n        {{ 'AbpPermissionManagement::Permissions' | abpLocalization }} -\r\n        {{ entityDisplayName || data.entityDisplayName }}\r\n      </h4>\r\n    </ng-template>\r\n    <ng-template #abpBody>\r\n      <div class=\"row d-flex align-items-center mb-2\">\r\n        <div class=\"col\">\r\n          <div class=\"input-group mb-2\">\r\n            <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"bi bi-search\"></i></span>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"permission-search\"\r\n              placeholder=\"Filter\"\r\n              [ngModel]=\"filter()\"\r\n              (ngModelChange)=\"filter.set($event)\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"col-auto\">\r\n          <div class=\"form-check mb-2\">\r\n            <input\r\n              #selectAllInAllTabsRef\r\n              type=\"checkbox\"\r\n              id=\"select-all-in-all-tabs\"\r\n              name=\"select-all-in-all-tabs\"\r\n              class=\"form-check-input\"\r\n              [(ngModel)]=\"selectAllTab\"\r\n              (click)=\"onClickSelectAll()\"\r\n              [disabled]=\"disabledSelectAllInAllTabs\"\r\n            />\r\n            <label class=\"form-check-label\" for=\"select-all-in-all-tabs\">{{\r\n              'AbpPermissionManagement::SelectAllInAllTabs' | abpLocalization\r\n            }}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <fieldset class=\"border rounded-4 p-3\">\r\n        <legend class=\"px-1 h5 mb-0\">\r\n          {{ 'AbpPermissionManagement::PermissionGroup' | abpLocalization }}\r\n        </legend>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-4\">\r\n            <div class=\"overflow-auto lpx-scroll-pills-container scroll-in-modal\">\r\n              <ul class=\"nav nav-pills flex-column\">\r\n                @for (group of permissionGroups(); track $index) {\r\n                  <li class=\"border nav-item\">\r\n                    @if ({ assignedCount: getAssignedCount(group.name) }; as count) {\r\n                      <a\r\n                        class=\"nav-link pointer\"\r\n                        [class.active]=\"selectedGroup?.name === group?.name\"\r\n                        (click)=\"onChangeGroup(group)\"\r\n                        (select)=\"setDisabled(group.permissions)\"\r\n                      >\r\n                        <div [class.font-weight-bold]=\"count.assignedCount\">\r\n                          {{ group?.displayName }}\r\n                          @if (count.assignedCount > 0) {\r\n                            <span>({{ count.assignedCount }})</span>\r\n                          }\r\n                        </div>\r\n                      </a>\r\n                    }\r\n                  </li>\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-md-8 scroll-in-modal\">\r\n            <div class=\"ps-1\">\r\n              @if (selectedGroupPermissions.length) {\r\n                <div class=\"form-check mb-2\">\r\n                  <input\r\n                    #selectAllInThisTabsRef\r\n                    type=\"checkbox\"\r\n                    id=\"select-all-in-this-tabs\"\r\n                    name=\"select-all-in-this-tabs\"\r\n                    class=\"form-check-input\"\r\n                    [(ngModel)]=\"selectThisTab\"\r\n                    [disabled]=\"disableSelectAllTab\"\r\n                    (click)=\"onClickSelectThisTab()\"\r\n                  />\r\n                  <label class=\"form-check-label\" for=\"select-all-in-this-tabs\">{{\r\n                    'AbpPermissionManagement::SelectAllInThisTab' | abpLocalization\r\n                  }}</label>\r\n                </div>\r\n                <hr class=\"my-2\" />\r\n                @for (permission of selectedGroupPermissions; track $index; let i = $index) {\r\n                  <div [ngStyle]=\"permission.style\" class=\"form-check mb-2\">\r\n                    <input\r\n                      #permissionCheckbox\r\n                      type=\"checkbox\"\r\n                      [checked]=\"getChecked(permission.name)\"\r\n                      [value]=\"getChecked(permission.name)\"\r\n                      [attr.id]=\"permission.name\"\r\n                      class=\"form-check-input\"\r\n                      [disabled]=\"isGrantedByOtherProviderName(permission.grantedProviders)\"\r\n                      (click)=\"onClickCheckbox(permission, permissionCheckbox.value)\"\r\n                    />\r\n                    <label class=\"form-check-label\" [attr.for]=\"permission.name\"\r\n                      >{{ permission.displayName }}\r\n                      @if (!hideBadges) {\r\n                        @for (provider of permission.grantedProviders; track $index) {\r\n                          <span class=\"badge bg-primary text-dark\"\r\n                            >{{ provider.providerName }}: {{ provider.providerKey }}</span\r\n                          >\r\n                        }\r\n                      }\r\n                    </label>\r\n                  </div>\r\n                }\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </ng-template>\r\n    <ng-template #abpFooter>\r\n      <button type=\"button\" class=\"btn btn-outline-primary\" abpClose>\r\n        {{ 'AbpIdentity::Cancel' | abpLocalization }}\r\n      </button>\r\n      <abp-button iconClass=\"fa fa-check\" (click)=\"submit()\">{{\r\n        'AbpIdentity::Save' | abpLocalization\r\n      }}</abp-button>\r\n    </ng-template>\r\n  }\r\n</abp-modal>\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { PermissionManagementComponent } from './components/permission-management.component';\r\n\r\n@NgModule({\r\n  declarations: [PermissionManagementComponent],\r\n  imports: [CoreModule, ThemeSharedModule],\r\n  exports: [PermissionManagementComponent],\r\n})\r\nexport class PermissionManagementModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}