{"version":3,"file":"abp-ng.tenant-management.mjs","sources":["../../../../packages/tenant-management/src/lib/components/tenants/tenants.component.ts","../../../../packages/tenant-management/src/lib/components/tenants/tenants.component.html","../../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-actions.ts","../../../../packages/tenant-management/src/lib/defaults/default-tenants-entity-props.ts","../../../../packages/tenant-management/src/lib/defaults/default-tenants-form-props.ts","../../../../packages/tenant-management/src/lib/defaults/default-tenants-toolbar-actions.ts","../../../../packages/tenant-management/src/lib/tokens/extensions.token.ts","../../../../packages/tenant-management/src/lib/guards/extensions.guard.ts","../../../../packages/tenant-management/src/lib/resolvers/extensions.resolver.ts","../../../../packages/tenant-management/src/lib/tenant-management-routing.module.ts","../../../../packages/tenant-management/src/lib/tenant-management.module.ts","../../../../packages/tenant-management/src/abp-ng.tenant-management.ts"],"sourcesContent":["import { ListService, PagedResultDto } from '@abp/ng.core';\r\nimport { eFeatureManagementComponents } from '@abp/ng.feature-management';\r\nimport { GetTenantsInput, TenantDto, TenantService } from '@abp/ng.tenant-management/proxy';\r\nimport { Confirmation, ConfirmationService, ToasterService } from '@abp/ng.theme.shared';\r\nimport {\r\n  EXTENSIONS_IDENTIFIER,\r\n  FormPropData,\r\n  generateFormFromProps,\r\n} from '@abp/ng.components/extensible';\r\nimport { Component, inject, Injector, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { eTenantManagementComponents } from '../../enums/components';\r\n\r\n@Component({\r\n  standalone: false,\r\n  selector: 'abp-tenants',\r\n  templateUrl: './tenants.component.html',\r\n  providers: [\r\n    ListService,\r\n    {\r\n      provide: EXTENSIONS_IDENTIFIER,\r\n      useValue: eTenantManagementComponents.Tenants,\r\n    },\r\n  ],\r\n})\r\nexport class TenantsComponent implements OnInit {\r\n  protected readonly list = inject(ListService<GetTenantsInput>);\r\n  protected readonly confirmationService = inject(ConfirmationService);\r\n  protected readonly service = inject(TenantService);\r\n  protected readonly toasterService = inject(ToasterService);\r\n  private readonly fb = inject(UntypedFormBuilder);\r\n  private readonly injector = inject(Injector);\r\n\r\n  data: PagedResultDto<TenantDto> = { items: [], totalCount: 0 };\r\n\r\n  selected!: TenantDto;\r\n\r\n  tenantForm!: UntypedFormGroup;\r\n\r\n  isModalVisible!: boolean;\r\n\r\n  visibleFeatures = false;\r\n\r\n  providerKey!: string;\r\n\r\n  modalBusy = false;\r\n\r\n  featureManagementKey = eFeatureManagementComponents.FeatureManagement;\r\n\r\n  get hasSelectedTenant(): boolean {\r\n    return Boolean(this.selected.id);\r\n  }\r\n\r\n  onVisibleFeaturesChange = (value: boolean) => {\r\n    this.visibleFeatures = value;\r\n  };\r\n\r\n  ngOnInit() {\r\n    this.hookToQuery();\r\n  }\r\n\r\n  private createTenantForm() {\r\n    const data = new FormPropData(this.injector, this.selected);\r\n    this.tenantForm = generateFormFromProps(data);\r\n  }\r\n\r\n  addTenant() {\r\n    this.selected = {} as TenantDto;\r\n    this.createTenantForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  editTenant(id: string) {\r\n    this.service.get(id).subscribe(res => {\r\n      this.selected = res;\r\n      this.createTenantForm();\r\n      this.isModalVisible = true;\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (!this.tenantForm.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    const { id } = this.selected;\r\n\r\n    (id\r\n      ? this.service.update(id, { ...this.selected, ...this.tenantForm.value })\r\n      : this.service.create(this.tenantForm.value)\r\n    )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.toasterService.success('AbpUi::SavedSuccessfully');\r\n        this.list.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn(\r\n        'AbpTenantManagement::TenantDeletionConfirmationMessage',\r\n        'AbpTenantManagement::AreYouSure',\r\n        {\r\n          messageLocalizationParams: [name],\r\n        },\r\n      )\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.toasterService.success('AbpUi::DeletedSuccessfully');\r\n          this.service.delete(id).subscribe(() => this.list.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  hookToQuery() {\r\n    this.list\r\n      .hookToQuery(query => this.service.getList(query))\r\n      .subscribe(res => {\r\n        this.data = res;\r\n      });\r\n  }\r\n\r\n  onSharedDatabaseChange(value: boolean) {\r\n    if (!value) {\r\n      setTimeout(() => {\r\n        const defaultConnectionString = document.getElementById(\r\n          'defaultConnectionString',\r\n        ) as HTMLInputElement;\r\n        if (defaultConnectionString) {\r\n          defaultConnectionString.focus();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  openFeaturesModal(providerKey: string) {\r\n    this.providerKey = providerKey;\r\n    setTimeout(() => {\r\n      this.visibleFeatures = true;\r\n    }, 0);\r\n  }\r\n\r\n  sort(data: any) {\r\n    const { prop, dir } = data.sorts[0];\r\n    this.list.sortKey = prop;\r\n    this.list.sortOrder = dir;\r\n  }\r\n}\r\n","<abp-page [title]=\"'AbpTenantManagement::Tenants' | abpLocalization\" [toolbar]=\"data.items\">\r\n  <div id=\"wrapper\" class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div id=\"data-tables-table-filter\" class=\"data-tables-filter mb-3\">\r\n        <div class=\"input-group\">\r\n          <input\r\n            type=\"search\"\r\n            class=\"form-control\"\r\n            [placeholder]=\"'AbpUi::PagerSearch' | abpLocalization\"\r\n            [(ngModel)]=\"list.filter\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <abp-extensible-table\r\n        [data]=\"data.items || []\"\r\n        [recordsTotal]=\"data.totalCount || 0\"\r\n        [list]=\"list\"\r\n      ></abp-extensible-table>\r\n    </div>\r\n  </div>\r\n\r\n  <abp-modal [(visible)]=\"isModalVisible\" [busy]=\"modalBusy\">\r\n    <ng-template #abpHeader>\r\n      <h3>\r\n        {{\r\n          (selected?.id ? 'AbpTenantManagement::Edit' : 'AbpTenantManagement::NewTenant')\r\n            | abpLocalization\r\n        }}\r\n      </h3>\r\n    </ng-template>\r\n\r\n    <ng-template #abpBody>\r\n      <form [formGroup]=\"tenantForm\" (ngSubmit)=\"save()\" [validateOnSubmit]=\"true\">\r\n        <abp-extensible-form [selectedRecord]=\"selected\"></abp-extensible-form>\r\n      </form>\r\n    </ng-template>\r\n\r\n    <ng-template #abpFooter>\r\n      <button abpClose type=\"button\" class=\"btn btn-outline-primary\">\r\n        {{ 'AbpTenantManagement::Cancel' | abpLocalization }}\r\n      </button>\r\n      <abp-button iconClass=\"fa fa-check\" (click)=\"save()\" [disabled]=\"tenantForm?.invalid\">{{\r\n        'AbpTenantManagement::Save' | abpLocalization\r\n      }}</abp-button>\r\n    </ng-template>\r\n  </abp-modal>\r\n\r\n  <abp-feature-management\r\n    *abpReplaceableTemplate=\"{\r\n      inputs: {\r\n        providerName: { value: 'T' },\r\n        providerKey: { value: providerKey },\r\n        visible: { value: visibleFeatures, twoWay: true }\r\n      },\r\n      outputs: { visibleChange: $any(onVisibleFeaturesChange) },\r\n      componentKey: featureManagementKey\r\n    }\"\r\n    [(visible)]=\"visibleFeatures\"\r\n    providerName=\"T\"\r\n    [providerKey]=\"providerKey\"\r\n  >\r\n  </abp-feature-management>\r\n</abp-page>\r\n","import { TenantDto } from '@abp/ng.tenant-management/proxy';\r\nimport { EntityAction } from '@abp/ng.components/extensible';\r\nimport { TenantsComponent } from '../components/tenants/tenants.component';\r\n\r\nexport const DEFAULT_TENANTS_ENTITY_ACTIONS = EntityAction.createMany<TenantDto>([\r\n  {\r\n    text: 'AbpTenantManagement::Edit',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.editTenant(data.record.id);\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.Update',\r\n  },\r\n  {\r\n    text: 'AbpTenantManagement::Permission:ManageFeatures',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.openFeaturesModal(data.record.id);\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.ManageFeatures',\r\n  },\r\n  {\r\n    text: 'AbpTenantManagement::Delete',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.delete(data.record.id, data.record.name);\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.Delete',\r\n  },\r\n]);\r\n","import { TenantDto } from '@abp/ng.tenant-management/proxy';\r\nimport { EntityProp, ePropType } from '@abp/ng.components/extensible';\r\n\r\nexport const DEFAULT_TENANTS_ENTITY_PROPS = EntityProp.createMany<TenantDto>([\r\n  {\r\n    type: ePropType.String,\r\n    name: 'name',\r\n    displayName: 'AbpTenantManagement::TenantName',\r\n    sortable: true,\r\n  },\r\n]);\r\n","import { TenantCreateDto, TenantUpdateDto } from '@abp/ng.tenant-management/proxy';\r\nimport { getPasswordValidators } from '@abp/ng.theme.shared';\r\nimport { ePropType, FormProp } from '@abp/ng.components/extensible';\r\nimport { Validators } from '@angular/forms';\r\n\r\nexport const DEFAULT_TENANTS_CREATE_FORM_PROPS = FormProp.createMany<\r\n  TenantCreateDto | TenantUpdateDto\r\n>([\r\n  {\r\n    type: ePropType.String,\r\n    name: 'name',\r\n    id: 'name',\r\n    displayName: 'AbpTenantManagement::TenantName',\r\n    validators: () => [Validators.required, Validators.maxLength(256)],\r\n  },\r\n  {\r\n    type: ePropType.Email,\r\n    name: 'adminEmailAddress',\r\n    displayName: 'AbpTenantManagement::DisplayName:AdminEmailAddress',\r\n    id: 'admin-email-address',\r\n    validators: () => [Validators.required, Validators.maxLength(256), Validators.email],\r\n  },\r\n  {\r\n    type: ePropType.PasswordInputGroup,\r\n    name: 'adminPassword',\r\n    displayName: 'AbpTenantManagement::DisplayName:AdminPassword',\r\n    id: 'admin-password',\r\n    autocomplete: 'new-password',\r\n    validators: data => [Validators.required, ...getPasswordValidators({ get: data.getInjected })],\r\n  },\r\n]);\r\n\r\nexport const DEFAULT_TENANTS_EDIT_FORM_PROPS = DEFAULT_TENANTS_CREATE_FORM_PROPS.slice(0, 1);\r\n","import { TenantDto } from '@abp/ng.tenant-management/proxy';\r\nimport { ToolbarAction } from '@abp/ng.components/extensible';\r\nimport { TenantsComponent } from '../components/tenants/tenants.component';\r\n\r\nexport const DEFAULT_TENANTS_TOOLBAR_ACTIONS = ToolbarAction.createMany<TenantDto[]>([\r\n  {\r\n    text: 'AbpTenantManagement::NewTenant',\r\n    action: data => {\r\n      const component = data.getInjected(TenantsComponent);\r\n      component.addTenant();\r\n    },\r\n    permission: 'AbpTenantManagement.Tenants.Create',\r\n    icon: 'fa fa-plus',\r\n  },\r\n]);\r\n","import { TenantCreateDto, TenantDto, TenantUpdateDto } from '@abp/ng.tenant-management/proxy';\r\nimport {\r\n  CreateFormPropContributorCallback,\r\n  EditFormPropContributorCallback,\r\n  EntityActionContributorCallback,\r\n  EntityPropContributorCallback,\r\n  ToolbarActionContributorCallback,\r\n} from '@abp/ng.components/extensible';\r\nimport { InjectionToken } from '@angular/core';\r\nimport { DEFAULT_TENANTS_ENTITY_ACTIONS } from '../defaults/default-tenants-entity-actions';\r\nimport { DEFAULT_TENANTS_ENTITY_PROPS } from '../defaults/default-tenants-entity-props';\r\nimport {\r\n  DEFAULT_TENANTS_CREATE_FORM_PROPS,\r\n  DEFAULT_TENANTS_EDIT_FORM_PROPS,\r\n} from '../defaults/default-tenants-form-props';\r\nimport { DEFAULT_TENANTS_TOOLBAR_ACTIONS } from '../defaults/default-tenants-toolbar-actions';\r\nimport { eTenantManagementComponents } from '../enums/components';\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_ACTIONS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_TOOLBAR_ACTIONS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_ENTITY_PROPS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_CREATE_FORM_PROPS,\r\n};\r\n\r\nexport const DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS = {\r\n  [eTenantManagementComponents.Tenants]: DEFAULT_TENANTS_EDIT_FORM_PROPS,\r\n};\r\n\r\nexport const TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS =\r\n  new InjectionToken<EntityActionContributors>('TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS =\r\n  new InjectionToken<ToolbarActionContributors>('TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS =\r\n  new InjectionToken<EntityPropContributors>('TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS =\r\n  new InjectionToken<CreateFormPropContributors>('TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS');\r\n\r\nexport const TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS =\r\n  new InjectionToken<EditFormPropContributors>('TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS');\r\n\r\n// Fix for TS4023 -> https://github.com/microsoft/TypeScript/issues/9944#issuecomment-254693497\r\ntype EntityActionContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: EntityActionContributorCallback<TenantDto>[];\r\n}>;\r\ntype ToolbarActionContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: ToolbarActionContributorCallback<TenantDto[]>[];\r\n}>;\r\ntype EntityPropContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: EntityPropContributorCallback<TenantDto>[];\r\n}>;\r\ntype CreateFormPropContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: CreateFormPropContributorCallback<TenantCreateDto>[];\r\n}>;\r\ntype EditFormPropContributors = Partial<{\r\n  [eTenantManagementComponents.Tenants]: EditFormPropContributorCallback<TenantUpdateDto>[];\r\n}>;\r\n","import {\r\n  ExtensionsService,\r\n  getObjectExtensionEntitiesFromStore,\r\n  mapEntitiesToContributors,\r\n  mergeWithDefaultActions,\r\n  mergeWithDefaultProps,\r\n} from '@abp/ng.components/extensible';\r\nimport { IAbpGuard } from '@abp/ng.core';\r\nimport { Injectable, Injector, inject } from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\nimport { eTenantManagementComponents } from '../enums/components';\r\nimport {\r\n  DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\r\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\r\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\r\n} from '../tokens/extensions.token';\r\n\r\n/**\r\n * @deprecated Use `tenantManagementExtensionsResolver` *function* instead.\r\n */\r\n@Injectable()\r\nexport class TenantManagementExtensionsGuard implements IAbpGuard {\r\n  protected readonly injector = inject(Injector);\r\n  protected readonly extensions = inject(ExtensionsService);\r\n\r\n  canActivate(): Observable<boolean> {\r\n    const config = { optional: true };\r\n\r\n    const actionContributors = inject(TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS, config) || {};\r\n    const toolbarContributors = inject(TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS, config) || {};\r\n    const propContributors = inject(TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS, config) || {};\r\n    const createFormContributors =\r\n      inject(TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS, config) || {};\r\n    const editFormContributors =\r\n      inject(TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS, config) || {};\r\n\r\n    return getObjectExtensionEntitiesFromStore(this.injector, 'TenantManagement').pipe(\r\n      map(entities => ({\r\n        [eTenantManagementComponents.Tenants]: entities.Tenant,\r\n      })),\r\n      mapEntitiesToContributors(this.injector, 'TenantManagement'),\r\n      tap(objectExtensionContributors => {\r\n        mergeWithDefaultActions(\r\n          this.extensions.entityActions,\r\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\r\n          actionContributors,\r\n        );\r\n        mergeWithDefaultActions(\r\n          this.extensions.toolbarActions,\r\n          DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\r\n          toolbarContributors,\r\n        );\r\n        mergeWithDefaultProps(\r\n          this.extensions.entityProps,\r\n          DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\r\n          objectExtensionContributors.prop,\r\n          propContributors,\r\n        );\r\n        mergeWithDefaultProps(\r\n          this.extensions.createFormProps,\r\n          DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\r\n          objectExtensionContributors.createForm,\r\n          createFormContributors,\r\n        );\r\n        mergeWithDefaultProps(\r\n          this.extensions.editFormProps,\r\n          DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\r\n          objectExtensionContributors.editForm,\r\n          editFormContributors,\r\n        );\r\n      }),\r\n      map(() => true),\r\n    );\r\n  }\r\n}\r\n","import {\r\n  ExtensionsService,\r\n  getObjectExtensionEntitiesFromStore,\r\n  mapEntitiesToContributors,\r\n  mergeWithDefaultActions,\r\n  mergeWithDefaultProps,\r\n} from '@abp/ng.components/extensible';\r\nimport { inject, Injector } from '@angular/core';\r\nimport { ResolveFn } from '@angular/router';\r\nimport { map, tap } from 'rxjs';\r\nimport { eTenantManagementComponents } from '../enums';\r\nimport {\r\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\r\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\r\n  DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\r\n  DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\r\n  DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\r\n} from '../tokens';\r\n\r\nexport const tenantManagementExtensionsResolver: ResolveFn<any> = () => {\r\n  const injector = inject(Injector);\r\n  const extensions = inject(ExtensionsService);\r\n\r\n  const config = { optional: true };\r\n\r\n  const actionContributors = inject(TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS, config) || {};\r\n  const toolbarContributors = inject(TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS, config) || {};\r\n  const propContributors = inject(TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS, config) || {};\r\n  const createFormContributors =\r\n    inject(TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS, config) || {};\r\n  const editFormContributors = inject(TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS, config) || {};\r\n\r\n  return getObjectExtensionEntitiesFromStore(injector, 'TenantManagement').pipe(\r\n    map(entities => ({\r\n      [eTenantManagementComponents.Tenants]: entities.Tenant,\r\n    })),\r\n    mapEntitiesToContributors(injector, 'TenantManagement'),\r\n    tap(objectExtensionContributors => {\r\n      mergeWithDefaultActions(\r\n        extensions.entityActions,\r\n        DEFAULT_TENANT_MANAGEMENT_ENTITY_ACTIONS,\r\n        actionContributors,\r\n      );\r\n      mergeWithDefaultActions(\r\n        extensions.toolbarActions,\r\n        DEFAULT_TENANT_MANAGEMENT_TOOLBAR_ACTIONS,\r\n        toolbarContributors,\r\n      );\r\n      mergeWithDefaultProps(\r\n        extensions.entityProps,\r\n        DEFAULT_TENANT_MANAGEMENT_ENTITY_PROPS,\r\n        objectExtensionContributors.prop,\r\n        propContributors,\r\n      );\r\n      mergeWithDefaultProps(\r\n        extensions.createFormProps,\r\n        DEFAULT_TENANT_MANAGEMENT_CREATE_FORM_PROPS,\r\n        objectExtensionContributors.createForm,\r\n        createFormContributors,\r\n      );\r\n      mergeWithDefaultProps(\r\n        extensions.editFormProps,\r\n        DEFAULT_TENANT_MANAGEMENT_EDIT_FORM_PROPS,\r\n        objectExtensionContributors.editForm,\r\n        editFormContributors,\r\n      );\r\n    }),\r\n  );\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport {\r\n  authGuard,\r\n  permissionGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n  RouterOutletComponent,\r\n} from '@abp/ng.core';\r\n\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { eTenantManagementComponents } from './enums/components';\r\nimport { tenantManagementExtensionsResolver } from './resolvers';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: RouterOutletComponent,\r\n    canActivate: [authGuard, permissionGuard],\r\n    resolve: [tenantManagementExtensionsResolver],\r\n    children: [\r\n      {\r\n        path: 'tenants',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpTenantManagement.Tenants',\r\n          replaceableComponent: {\r\n            key: eTenantManagementComponents.Tenants,\r\n            defaultComponent: TenantsComponent,\r\n          } as ReplaceableComponents.RouteData<TenantsComponent>,\r\n        },\r\n        title: 'AbpTenantManagement::Tenants',\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TenantManagementRoutingModule { }\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ExtensibleModule } from '@abp/ng.components/extensible';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { TenantManagementExtensionsGuard } from './guards/extensions.guard';\r\nimport { TenantManagementConfigOptions } from './models/config-options';\r\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\r\nimport {\r\n  TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\r\n  TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\r\n} from './tokens/extensions.token';\r\nimport { PageModule } from '@abp/ng.components/page';\r\nimport { FeatureManagementComponent } from '@abp/ng.feature-management';\r\n\r\n@NgModule({\r\n  declarations: [TenantsComponent],\r\n  exports: [TenantsComponent],\r\n  imports: [\r\n    TenantManagementRoutingModule,\r\n    NgxValidateCoreModule,\r\n    CoreModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    ExtensibleModule,\r\n    PageModule,\r\n    FeatureManagementComponent,\r\n  ],\r\n})\r\nexport class TenantManagementModule {\r\n  static forChild(\r\n    options: TenantManagementConfigOptions = {},\r\n  ): ModuleWithProviders<TenantManagementModule> {\r\n    return {\r\n      ngModule: TenantManagementModule,\r\n      providers: [\r\n        {\r\n          provide: TENANT_MANAGEMENT_ENTITY_ACTION_CONTRIBUTORS,\r\n          useValue: options.entityActionContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_TOOLBAR_ACTION_CONTRIBUTORS,\r\n          useValue: options.toolbarActionContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_ENTITY_PROP_CONTRIBUTORS,\r\n          useValue: options.entityPropContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_CREATE_FORM_PROP_CONTRIBUTORS,\r\n          useValue: options.createFormPropContributors,\r\n        },\r\n        {\r\n          provide: TENANT_MANAGEMENT_EDIT_FORM_PROP_CONTRIBUTORS,\r\n          useValue: options.editFormPropContributors,\r\n        },\r\n        TenantManagementExtensionsGuard,\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forLazy(\r\n    options: TenantManagementConfigOptions = {},\r\n  ): NgModuleFactory<TenantManagementModule> {\r\n    return new LazyModuleFactory(TenantManagementModule.forChild(options));\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["map","tap"],"mappings":"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"}