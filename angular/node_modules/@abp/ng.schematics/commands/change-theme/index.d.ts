import { JsonValue } from '@angular-devkit/core';
import { Rule, Tree } from '@angular-devkit/schematics';
import { ProjectDefinition } from '@angular-devkit/core/src/workspace';
import * as ts from 'typescript';
import { ChangeThemeOptions } from './model';
import { ThemeOptionsEnum } from './theme-options.enum';
export default function (_options: ChangeThemeOptions): Rule;
export declare function removeImportPath(appModulePath: string, selectedTheme: ThemeOptionsEnum): Rule;
export declare function removeImportFromNgModuleMetadata(appModulePath: string, selectedTheme: ThemeOptionsEnum): Rule;
export declare function removeProviderFromNgModuleMetadata(appModulePath: string, selectedTheme: ThemeOptionsEnum): Rule;
export declare function insertImports(appModulePath: string, selectedTheme: ThemeOptionsEnum): Rule;
export declare function insertProviders(appModulePath: string, selectedTheme: ThemeOptionsEnum): Rule;
export declare function createSourceFile(host: Tree, appModulePath: string): ts.SourceFile;
/**
 * Returns all import paths except the selected theme
 * @param selectedTheme The selected theme
 * @param getAll If true, returns all import paths
 */
export declare function getImportPaths(selectedTheme: ThemeOptionsEnum, getAll?: boolean): import("./style-map").ImportDefinition[];
export declare function getProjectTargetOptions(project: ProjectDefinition, buildTarget: string): Record<string, JsonValue | undefined>;
export declare function removeThemeBasedStyles(styles: (string | object)[]): (string | object)[];
export declare const styleCompareFn: (item1: string | object, item2: string | object) => boolean | "" | undefined;
