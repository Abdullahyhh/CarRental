{"version":3,"file":"abp-ng.feature-management.mjs","sources":["../../../../packages/feature-management/src/lib/directives/free-text-input.directive.ts","../../../../packages/feature-management/src/lib/components/feature-management/feature-management.component.ts","../../../../packages/feature-management/src/lib/components/feature-management/feature-management.component.html","../../../../packages/feature-management/src/lib/components/feature-management-tab/feature-management-tab.component.ts","../../../../packages/feature-management/src/lib/components/feature-management-tab/feature-management-tab.component.html","../../../../packages/feature-management/src/lib/providers/feature-management-settings.provider.ts","../../../../packages/feature-management/src/lib/providers/feature-management-config.provider.ts","../../../../packages/feature-management/src/lib/feature-management.module.ts","../../../../packages/feature-management/src/abp-ng.feature-management.ts"],"sourcesContent":["import { Directive, HostBinding, Input } from '@angular/core';\r\n\r\n// TODO: improve this type\r\nexport interface FreeTextType {\r\n  valueType: {\r\n    validator: {\r\n      name: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport const INPUT_TYPES = {\r\n  numeric: 'number',\r\n  default: 'text',\r\n};\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'input[abpFeatureManagementFreeText]',\r\n  exportAs: 'inputAbpFeatureManagementFreeText',\r\n})\r\nexport class FreeTextInputDirective {\r\n  _feature: FreeTextType;\r\n  // eslint-disable-next-line @angular-eslint/no-input-rename\r\n  @Input('abpFeatureManagementFreeText') set feature(val: FreeTextType) {\r\n    this._feature = val;\r\n    this.setInputType();\r\n  }\r\n\r\n  get feature() {\r\n    return this._feature;\r\n  }\r\n\r\n  @HostBinding('type') type: string;\r\n\r\n  private setInputType() {\r\n    const validatorType = this.feature?.valueType?.validator?.name.toLowerCase();\r\n    this.type = INPUT_TYPES[validatorType] ?? INPUT_TYPES.default;\r\n  }\r\n}\r\n","import { ConfigStateService, LocalizationModule, TrackByService } from '@abp/ng.core';\r\nimport {\r\n  FeatureDto,\r\n  FeatureGroupDto,\r\n  FeaturesService,\r\n  UpdateFeatureDto,\r\n} from '@abp/ng.feature-management/proxy';\r\nimport {\r\n  Confirmation,\r\n  ConfirmationService,\r\n  LocaleDirection,\r\n  ThemeSharedModule,\r\n  ToasterService,\r\n} from '@abp/ng.theme.shared';\r\nimport { Component, EventEmitter, Input, Output, inject } from '@angular/core';\r\nimport { CommonModule, NgTemplateOutlet } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { FreeTextInputDirective } from '../../directives';\r\nimport { FeatureManagement } from '../../models/feature-management';\r\n\r\nenum ValueTypes {\r\n  ToggleStringValueType = 'ToggleStringValueType',\r\n  FreeTextStringValueType = 'FreeTextStringValueType',\r\n  SelectionStringValueType = 'SelectionStringValueType',\r\n}\r\n\r\n@Component({\r\n  selector: 'abp-feature-management',\r\n  templateUrl: './feature-management.component.html',\r\n  exportAs: 'abpFeatureManagement',\r\n  imports: [\r\n    CommonModule,\r\n    ThemeSharedModule,\r\n    LocalizationModule,\r\n    FormsModule,\r\n    NgbNavModule,\r\n    FreeTextInputDirective,\r\n    NgTemplateOutlet,\r\n  ],\r\n})\r\nexport class FeatureManagementComponent\r\n  implements\r\n    FeatureManagement.FeatureManagementComponentInputs,\r\n    FeatureManagement.FeatureManagementComponentOutputs\r\n{\r\n  protected readonly track = inject(TrackByService);\r\n  protected readonly toasterService = inject(ToasterService);\r\n  protected readonly service = inject(FeaturesService);\r\n  protected readonly configState = inject(ConfigStateService);\r\n  protected readonly confirmationService = inject(ConfirmationService);\r\n\r\n  @Input()\r\n  providerKey: string;\r\n\r\n  @Input()\r\n  providerName: string;\r\n\r\n  @Input({ required: false })\r\n  providerTitle: string;\r\n\r\n  selectedGroupDisplayName: string;\r\n\r\n  groups: Pick<FeatureGroupDto, 'name' | 'displayName'>[] = [];\r\n\r\n  features: {\r\n    [group: string]: Array<FeatureDto & { style?: { [key: string]: number }; initialValue: any }>;\r\n  };\r\n\r\n  valueTypes = ValueTypes;\r\n\r\n  protected _visible;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    if (this._visible === value) {\r\n      return;\r\n    }\r\n\r\n    this._visible = value;\r\n    this.visibleChange.emit(value);\r\n\r\n    if (value) {\r\n      this.openModal();\r\n      return;\r\n    }\r\n  }\r\n\r\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\r\n\r\n  modalBusy = false;\r\n\r\n  openModal() {\r\n    if (!this.providerName) {\r\n      throw new Error('providerName is required.');\r\n    }\r\n\r\n    this.getFeatures();\r\n  }\r\n\r\n  getFeatures() {\r\n    this.service.get(this.providerName, this.providerKey).subscribe(res => {\r\n      if (!res.groups?.length) return;\r\n      this.groups = res.groups.map(({ name, displayName }) => ({ name, displayName }));\r\n      this.selectedGroupDisplayName = this.groups[0].displayName;\r\n      this.features = res.groups.reduce(\r\n        (acc, val) => ({\r\n          ...acc,\r\n          [val.name]: mapFeatures(val.features, document.body.dir as LocaleDirection),\r\n        }),\r\n        {},\r\n      );\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.modalBusy) return;\r\n\r\n    const changedFeatures = [] as UpdateFeatureDto[];\r\n\r\n    Object.keys(this.features).forEach(key => {\r\n      this.features[key].forEach(feature => {\r\n        if (feature.value !== feature.initialValue)\r\n          changedFeatures.push({ name: feature.name, value: `${feature.value}` });\r\n      });\r\n    });\r\n\r\n    if (!changedFeatures.length) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n\r\n    this.modalBusy = true;\r\n    this.service\r\n      .update(this.providerName, this.providerKey, { features: changedFeatures })\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.visible = false;\r\n\r\n        this.toasterService.success('AbpUi::SavedSuccessfully');\r\n        if (!this.providerKey) {\r\n          // to refresh host's features\r\n          this.configState.refreshAppState().subscribe();\r\n        }\r\n      });\r\n  }\r\n\r\n  resetToDefault() {\r\n    this.confirmationService\r\n      .warn('AbpFeatureManagement::AreYouSureToResetToDefault', 'AbpFeatureManagement::AreYouSure')\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.service.delete(this.providerName, this.providerKey).subscribe(() => {\r\n            this.toasterService.success('AbpFeatureManagement::ResetedToDefault');\r\n            this.visible = false;\r\n\r\n            if (!this.providerKey) {\r\n              // to refresh host's features\r\n              this.configState.refreshAppState().subscribe();\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  onCheckboxClick(val: boolean, feature: FeatureDto) {\r\n    if (val) {\r\n      this.checkToggleAncestors(feature);\r\n    } else {\r\n      this.uncheckToggleDescendants(feature);\r\n    }\r\n  }\r\n\r\n  private uncheckToggleDescendants(feature: FeatureDto) {\r\n    this.findAllDescendantsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\r\n      this.setFeatureValue(node, false),\r\n    );\r\n  }\r\n\r\n  private checkToggleAncestors(feature: FeatureDto) {\r\n    this.findAllAncestorsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\r\n      this.setFeatureValue(node, true),\r\n    );\r\n  }\r\n\r\n  private findAllAncestorsOfByType(feature: FeatureDto, type: ValueTypes) {\r\n    let parent = this.findParentByType(feature, type);\r\n    const ancestors = [];\r\n    while (parent) {\r\n      ancestors.push(parent);\r\n      parent = this.findParentByType(parent, type);\r\n    }\r\n    return ancestors;\r\n  }\r\n\r\n  private findAllDescendantsOfByType(feature: FeatureDto, type: ValueTypes) {\r\n    const descendants = [];\r\n    const queue = [feature];\r\n\r\n    while (queue.length) {\r\n      const node = queue.pop();\r\n      const newDescendants = this.findChildrenByType(node, type);\r\n      descendants.push(...newDescendants);\r\n      queue.push(...newDescendants);\r\n    }\r\n\r\n    return descendants;\r\n  }\r\n\r\n  private findParentByType(feature: FeatureDto, type: ValueTypes) {\r\n    return this.getCurrentGroup().find(\r\n      f => f.valueType.name === type && f.name === feature.parentName,\r\n    );\r\n  }\r\n\r\n  private findChildrenByType(feature: FeatureDto, type: ValueTypes) {\r\n    return this.getCurrentGroup().filter(\r\n      f => f.valueType.name === type && f.parentName === feature.name,\r\n    );\r\n  }\r\n\r\n  private getCurrentGroup() {\r\n    return this.features[this.selectedGroupDisplayName] ?? [];\r\n  }\r\n\r\n  private setFeatureValue(feature: FeatureDto, val: boolean) {\r\n    feature.value = val as any;\r\n  }\r\n}\r\n\r\nfunction mapFeatures(features: FeatureDto[], dir: LocaleDirection) {\r\n  const margin = `margin-${dir === 'rtl' ? 'right' : 'left'}.px`;\r\n\r\n  return features.map(feature => {\r\n    const value =\r\n      feature.valueType?.name === ValueTypes.ToggleStringValueType\r\n        ? (feature.value || '').toLowerCase() === 'true'\r\n        : feature.value;\r\n\r\n    return {\r\n      ...feature,\r\n      value,\r\n      initialValue: value,\r\n      style: { [margin]: feature.depth * 20 },\r\n    };\r\n  });\r\n}\r\n","@if (visible) {\r\n  <abp-modal [(visible)]=\"visible\" [busy]=\"modalBusy\" [options]=\"{ size: 'lg' }\">\r\n    <ng-template #abpHeader>\r\n      <h3>\r\n        {{ 'AbpFeatureManagement::Features' | abpLocalization }}\r\n        @if (providerTitle) {\r\n          - {{ providerTitle }}\r\n        }\r\n      </h3>\r\n    </ng-template>\r\n\r\n    <ng-template #abpBody>\r\n      <div class=\"row\">\r\n        @if (groups.length) {\r\n          <div class=\"col-md-4\">\r\n            <ul\r\n              ngbNav\r\n              #nav=\"ngbNav\"\r\n              [(activeId)]=\"selectedGroupDisplayName\"\r\n              class=\"nav-pills\"\r\n              orientation=\"vertical\"\r\n            >\r\n              @for (group of groups; track group.name) {\r\n                <li [ngbNavItem]=\"group.displayName\">\r\n                  <a ngbNavLink>{{ group.displayName }}</a>\r\n                  <ng-template ngbNavContent>\r\n                    <h4>{{ selectedGroupDisplayName }}</h4>\r\n                    <hr class=\"mt-2 mb-3\" />\r\n\r\n                    @for (feature of features[group.name]; track feature.id || i; let i = $index) {\r\n                      <div class=\"mt-2\" [ngStyle]=\"feature.style\" (keyup.enter)=\"save()\">\r\n                        @switch (feature.valueType?.name) {\r\n                          @case (valueTypes.ToggleStringValueType) {\r\n                            <div class=\"form-check\" [class.px-4]=\"!!feature.parentName\">\r\n                              <input\r\n                                class=\"form-check-input\"\r\n                                type=\"checkbox\"\r\n                                [id]=\"feature.name\"\r\n                                [(ngModel)]=\"feature.value\"\r\n                                (ngModelChange)=\"onCheckboxClick($event, feature)\"\r\n                              />\r\n\r\n                              <label class=\"form-check-label\" [htmlFor]=\"feature.name\">{{\r\n                                feature.displayName\r\n                              }}</label>\r\n                              <ng-container\r\n                                *ngTemplateOutlet=\"\r\n                                  descTmp;\r\n                                  context: { $implicit: feature.description }\r\n                                \"\r\n                              ></ng-container>\r\n                            </div>\r\n                          }\r\n                          @case (valueTypes.FreeTextStringValueType) {\r\n                            <div class=\"mb-3 form-group\" [class.px-2]=\"!!feature.parentName\">\r\n                              <label [htmlFor]=\"feature.name\" class=\"form-label\">{{\r\n                                feature.displayName\r\n                              }}</label>\r\n                              <input\r\n                                class=\"form-control\"\r\n                                type=\"text\"\r\n                                [id]=\"feature.name\"\r\n                                [(ngModel)]=\"feature.value\"\r\n                                [abpFeatureManagementFreeText]=\"feature\"\r\n                              />\r\n\r\n                              <ng-container\r\n                                *ngTemplateOutlet=\"\r\n                                  descTmp;\r\n                                  context: { $implicit: feature.description }\r\n                                \"\r\n                              ></ng-container>\r\n                            </div>\r\n                          }\r\n                          @case (valueTypes.SelectionStringValueType) {\r\n                            @if (feature.valueType.itemSource?.items?.length) {\r\n                              <div class=\"mb-3 form-group\" [class.px-2]=\"!!feature.parentName\">\r\n                                <label [htmlFor]=\"feature.name\" class=\"form-label\">{{\r\n                                  feature.displayName\r\n                                }}</label>\r\n                                <select\r\n                                  class=\"form-select\"\r\n                                  [id]=\"feature.name\"\r\n                                  [(ngModel)]=\"feature.value\"\r\n                                >\r\n                                  @for (\r\n                                    item of feature.valueType.itemSource?.items;\r\n                                    track item.value\r\n                                  ) {\r\n                                    <option [ngValue]=\"item.value\">\r\n                                      {{\r\n                                        item.displayText?.resourceName +\r\n                                          '::' +\r\n                                          item.displayText?.name | abpLocalization\r\n                                      }}\r\n                                    </option>\r\n                                  }\r\n                                </select>\r\n                                <ng-container\r\n                                  *ngTemplateOutlet=\"\r\n                                    descTmp;\r\n                                    context: { $implicit: feature.description }\r\n                                  \"\r\n                                ></ng-container>\r\n                              </div>\r\n                            }\r\n                          }\r\n                          @default {\r\n                            {{ feature.displayName }}\r\n                          }\r\n                        }\r\n                      </div>\r\n                    }\r\n                  </ng-template>\r\n                </li>\r\n              }\r\n            </ul>\r\n          </div>\r\n\r\n          <ng-template #descTmp let-description>\r\n            @if (description) {\r\n              <small class=\"d-block form-text text-muted\">{{ description }}</small>\r\n            }\r\n          </ng-template>\r\n\r\n          <div class=\"col-md-8\"><div class=\"py-0\" [ngbNavOutlet]=\"nav\"></div></div>\r\n        }\r\n\r\n        @if (!groups.length) {\r\n          <div class=\"col\">\r\n            {{ 'AbpFeatureManagement::NoFeatureFoundMessage' | abpLocalization }}\r\n          </div>\r\n        }\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #abpFooter>\r\n      <button abpClose type=\"button\" class=\"btn btn-link\">\r\n        {{ 'AbpFeatureManagement::Cancel' | abpLocalization }}\r\n      </button>\r\n\r\n      @if (groups.length) {\r\n        <abp-button\r\n          buttonClass=\"btn btn-outline-primary\"\r\n          [disabled]=\"modalBusy\"\r\n          (click)=\"resetToDefault()\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          {{ 'AbpFeatureManagement::ResetToDefault' | abpLocalization }}\r\n        </abp-button>\r\n      }\r\n\r\n      @if (groups.length) {\r\n        <abp-button\r\n          iconClass=\"fa fa-check\"\r\n          [disabled]=\"modalBusy\"\r\n          (click)=\"save()\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          {{ 'AbpFeatureManagement::Save' | abpLocalization }}\r\n        </abp-button>\r\n      }\r\n    </ng-template>\r\n  </abp-modal>\r\n}\r\n","import { LocalizationModule, ReplaceableTemplateDirective } from '@abp/ng.core';\r\nimport { Component } from '@angular/core';\r\nimport { FeatureManagementComponent } from '../feature-management/feature-management.component';\r\n\r\n@Component({\r\n  selector: 'abp-feature-management-tab',\r\n  templateUrl: './feature-management-tab.component.html',\r\n  imports: [ReplaceableTemplateDirective, LocalizationModule, FeatureManagementComponent],\r\n})\r\nexport class FeatureManagementTabComponent {\r\n  visibleFeatures = false;\r\n  providerKey: string;\r\n\r\n  openFeaturesModal() {\r\n    this.visibleFeatures = true;\r\n  }\r\n\r\n  onVisibleFeaturesChange = (value: boolean) => {\r\n    this.visibleFeatures = value;\r\n  };\r\n}\r\n","<p class=\"pt-2 text-wrap\">{{ 'AbpFeatureManagement::ManageHostFeaturesText' | abpLocalization }}</p>\r\n\r\n<button class=\"btn btn-primary\" type=\"button\" (click)=\"openFeaturesModal()\">\r\n  <i class=\"me-1 fa fa-cog\" aria-hidden=\"true\"></i>\r\n  {{ 'AbpFeatureManagement::ManageHostFeatures' | abpLocalization }}\r\n</button>\r\n@if (visibleFeatures) {\r\n  <abp-feature-management\r\n    *abpReplaceableTemplate=\"{\r\n      inputs: {\r\n        providerName: { value: 'T' },\r\n        providerKey: { value: providerKey },\r\n        visible: { value: visibleFeatures, twoWay: true }\r\n      },\r\n      outputs: { visibleChange: onVisibleFeaturesChange },\r\n      componentKey: 'FeatureManagement.FeatureManagementComponent'\r\n    }\"\r\n    [(visible)]=\"visibleFeatures\"\r\n    providerName=\"T\"\r\n    [providerKey]=\"providerKey\"\r\n  >\r\n  </abp-feature-management>\r\n}\r\n","import { SettingTabsService } from '@abp/ng.setting-management/config';\r\nimport { inject, provideAppInitializer } from '@angular/core';\r\nimport { eFeatureManagementTabNames } from '../enums/feature-management-tab-names';\r\nimport { FeatureManagementTabComponent } from '../components';\r\n\r\nexport const FEATURE_MANAGEMENT_SETTINGS_PROVIDERS = [\r\n  provideAppInitializer(() => {\r\n    configureSettingTabs();\r\n  }),\r\n];\r\n\r\nexport function configureSettingTabs() {\r\n  const settingtabs = inject(SettingTabsService);\r\n  settingtabs.add([\r\n    {\r\n      name: eFeatureManagementTabNames.FeatureManagement,\r\n      order: 100,\r\n      requiredPolicy: 'FeatureManagement.ManageHostFeatures',\r\n      component: FeatureManagementTabComponent,\r\n    },\r\n  ]);\r\n}\r\n","import { makeEnvironmentProviders } from '@angular/core';\r\nimport { FEATURE_MANAGEMENT_SETTINGS_PROVIDERS } from './';\r\n\r\nexport function provideFeatureManagementConfig() {\r\n  return makeEnvironmentProviders([FEATURE_MANAGEMENT_SETTINGS_PROVIDERS]);\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FeatureManagementComponent } from './components/feature-management/feature-management.component';\r\nimport { FreeTextInputDirective } from './directives/free-text-input.directive';\r\nimport { provideFeatureManagementConfig } from './providers';\r\nimport { FeatureManagementTabComponent } from './components';\r\n\r\nconst exported = [\r\n  FeatureManagementComponent,\r\n  FreeTextInputDirective,\r\n  FeatureManagementTabComponent,\r\n];\r\n\r\n/**\r\n * @deprecated FeatureManagementModule is deprecated .\r\n * @description use `provideFeatureManagementConfig` *function* for config settings.\r\n * You can import directives and pipes directly whichs were belongs to FeatureManagementModule are switched to standalone.\r\n */\r\n@NgModule({\r\n  imports: [CoreModule, ThemeSharedModule, NgbNavModule, ...exported],\r\n  exports: [...exported],\r\n})\r\nexport class FeatureManagementModule {\r\n  static forRoot(): ModuleWithProviders<FeatureManagementModule> {\r\n    return {\r\n      ngModule: FeatureManagementModule,\r\n      providers: [provideFeatureManagementConfig()],\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}