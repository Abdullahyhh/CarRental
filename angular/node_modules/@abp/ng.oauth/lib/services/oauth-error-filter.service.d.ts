import { OAuthErrorEvent } from 'angular-oauth2-oidc';
import { AbstractAuthErrorFilter, AuthErrorFilter } from '@abp/ng.core';
import * as i0 from "@angular/core";
export declare class OAuthErrorFilterService extends AbstractAuthErrorFilter<AuthErrorFilter<OAuthErrorEvent>, OAuthErrorEvent> {
    protected readonly _filters: import("@angular/core").WritableSignal<AuthErrorFilter<OAuthErrorEvent>[]>;
    readonly filters: import("@angular/core").Signal<AuthErrorFilter<OAuthErrorEvent>[]>;
    get(id: string): AuthErrorFilter<OAuthErrorEvent>;
    add(filter: AuthErrorFilter<OAuthErrorEvent>): void;
    patch(item: Partial<AuthErrorFilter<OAuthErrorEvent>>): void;
    remove(id: string): void;
    run(event: OAuthErrorEvent): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<OAuthErrorFilterService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<OAuthErrorFilterService>;
}
