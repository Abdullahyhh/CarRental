import { Injector } from '@angular/core';
import { Params } from '@angular/router';
import { Observable } from 'rxjs';
import { AbpAuthResponse, IAuthService, LoginParams } from '@abp/ng.core';
import { HttpHeaders } from '@angular/common/http';
import * as i0 from "@angular/core";
export declare class AbpOAuthService implements IAuthService {
    protected injector: Injector;
    private strategy;
    private readonly oAuthService;
    get oidc(): boolean;
    set oidc(value: boolean);
    get isInternalAuth(): boolean;
    constructor(injector: Injector);
    init(): Promise<any>;
    logout(queryParams?: Params): Observable<any>;
    navigateToLogin(queryParams?: Params): void;
    login(params: LoginParams): Observable<any>;
    get isAuthenticated(): boolean;
    loginUsingGrant(grantType: string, parameters: object, headers?: HttpHeaders): Promise<AbpAuthResponse>;
    getRefreshToken(): string;
    getAccessToken(): string;
    refreshToken(): Promise<AbpAuthResponse>;
    getAccessTokenExpiration(): number;
    static ɵfac: i0.ɵɵFactoryDeclaration<AbpOAuthService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AbpOAuthService>;
}
