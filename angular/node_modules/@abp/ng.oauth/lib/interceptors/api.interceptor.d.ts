import { HttpHandler, HttpHeaders, HttpRequest } from '@angular/common/http';
import { OAuthService } from 'angular-oauth2-oidc';
import { HttpWaitService, IApiInterceptor, SessionStateService } from '@abp/ng.core';
import * as i0 from "@angular/core";
export declare class OAuthApiInterceptor implements IApiInterceptor {
    private oAuthService;
    private sessionState;
    private httpWaitService;
    private tenantKey;
    constructor(oAuthService: OAuthService, sessionState: SessionStateService, httpWaitService: HttpWaitService, tenantKey: string);
    intercept(request: HttpRequest<any>, next: HttpHandler): import("rxjs").Observable<import("@angular/common/http").HttpEvent<any>>;
    getAdditionalHeaders(existingHeaders?: HttpHeaders): any;
    static ɵfac: i0.ɵɵFactoryDeclaration<OAuthApiInterceptor, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<OAuthApiInterceptor>;
}
