import * as i0 from '@angular/core';
import { provideAppInitializer, inject, makeEnvironmentProviders, Injector, NgModule } from '@angular/core';
import { RoutesService, NAVIGATE_TO_MANAGE_PROFILE } from '@abp/ng.core';
import { Router } from '@angular/router';

const ACCOUNT_ROUTE_PROVIDERS = [
    provideAppInitializer(() => {
        configureRoutes();
    }),
];
function configureRoutes() {
    const routes = inject(RoutesService);
    routes.add([
        {
            path: undefined,
            name: "AbpAccount::Menu:Account" /* eAccountRouteNames.Account */,
            invisible: true,
            layout: "account" /* eLayoutType.account */,
            breadcrumbText: "AbpAccount::Menu:Account" /* eAccountRouteNames.Account */,
            iconClass: 'bi bi-person-fill-gear',
            order: 1,
        },
        {
            path: '/account/login',
            name: "AbpAccount::Login" /* eAccountRouteNames.Login */,
            parentName: "AbpAccount::Menu:Account" /* eAccountRouteNames.Account */,
            layout: "account" /* eLayoutType.account */,
            order: 1,
        },
        {
            path: '/account/register',
            name: "AbpAccount::Register" /* eAccountRouteNames.Register */,
            parentName: "AbpAccount::Menu:Account" /* eAccountRouteNames.Account */,
            layout: "account" /* eLayoutType.account */,
            order: 2,
        },
        {
            path: '/account/manage',
            name: "AbpAccount::MyAccount" /* eAccountRouteNames.ManageProfile */,
            parentName: "AbpAccount::Menu:Account" /* eAccountRouteNames.Account */,
            layout: "application" /* eLayoutType.application */,
            breadcrumbText: 'AbpAccount::Manage',
            iconClass: 'bi bi-kanban-fill',
            order: 3,
        },
        {
            path: '/account/forgot-password',
            parentName: "AbpAccount::Menu:Account" /* eAccountRouteNames.Account */,
            name: "AbpAccount::ForgotPassword" /* eAccountRouteNames.ForgotPassword */,
            layout: "account" /* eLayoutType.account */,
            invisible: true,
        },
        {
            path: '/account/reset-password',
            parentName: "AbpAccount::Menu:Account" /* eAccountRouteNames.Account */,
            name: "AbpAccount::ResetPassword" /* eAccountRouteNames.ResetPassword */,
            layout: "account" /* eLayoutType.account */,
            invisible: true,
        },
    ]);
}

function navigateToManageProfileFactory(injector) {
    return () => {
        const router = injector.get(Router);
        const routes = injector.get(RoutesService);
        const { path } = routes.find(item => item.name === "AbpAccount::MyAccount" /* eAccountRouteNames.ManageProfile */);
        router.navigateByUrl(path);
    };
}

function provideAccountConfig() {
    return makeEnvironmentProviders([
        ACCOUNT_ROUTE_PROVIDERS,
        {
            provide: NAVIGATE_TO_MANAGE_PROFILE,
            useFactory: navigateToManageProfileFactory,
            deps: [Injector],
        },
    ]);
}

/**
 * @deprecated AccountConfigModule is deprecated use `provideAccountConfig` *function* instead.
 */
class AccountConfigModule {
    static forRoot() {
        return {
            ngModule: AccountConfigModule,
            providers: [provideAccountConfig()],
        };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "19.1.8", ngImport: i0, type: AccountConfigModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "19.1.8", ngImport: i0, type: AccountConfigModule }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "19.1.8", ngImport: i0, type: AccountConfigModule }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "19.1.8", ngImport: i0, type: AccountConfigModule, decorators: [{
            type: NgModule
        }] });

/**
 * Generated bundle index. Do not edit.
 */

export { ACCOUNT_ROUTE_PROVIDERS, AccountConfigModule, configureRoutes, navigateToManageProfileFactory, provideAccountConfig };
//# sourceMappingURL=abp-ng.account-config.mjs.map
